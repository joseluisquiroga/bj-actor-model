
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+932 (git sha1 613334d9, gcc 7.4.0-1ubuntu1~18.04.1 -fPIC -Os)


-- Parsing `synth.tcl' using frontend `tcl' --
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: bin_to_disp.v
Parsing Verilog input from `bin_to_disp.v' to AST representation.
Generating RTLIL representation for module `\bin_to_disp'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: debouncer.v
Parsing Verilog input from `debouncer.v' to AST representation.
Generating RTLIL representation for module `\debouncer'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: pulses.v
Parsing Verilog input from `pulses.v' to AST representation.
Generating RTLIL representation for module `\test_top'.
Successfully finished Verilog frontend.

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.2.1. Analyzing design hierarchy..
Top module:  \test_top
Used module:     \bin_to_disp
Used module:     \debouncer
Parameter \TOT_CKS = 250000

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\debouncer'.
Parameter \TOT_CKS = 250000
Generating RTLIL representation for module `$paramod\debouncer\TOT_CKS=250000'.
Parameter \TOT_CKS = 250000
Found cached RTLIL representation for module `$paramod\debouncer\TOT_CKS=250000'.
Parameter \TOT_CKS = 250000
Found cached RTLIL representation for module `$paramod\debouncer\TOT_CKS=250000'.
Parameter \TOT_CKS = 250000
Found cached RTLIL representation for module `$paramod\debouncer\TOT_CKS=250000'.

4.2.3. Analyzing design hierarchy..
Top module:  \test_top
Used module:     \bin_to_disp
Used module:     $paramod\debouncer\TOT_CKS=250000

4.2.4. Analyzing design hierarchy..
Top module:  \test_top
Used module:     \bin_to_disp
Used module:     $paramod\debouncer\TOT_CKS=250000
Removing unused module `\debouncer'.
Removed 1 unused modules.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 9 switch rules as full_case in process $proc$pulses.v:143$55 in module test_top.
Marked 3 switch rules as full_case in process $proc$pulses.v:102$18 in module test_top.
Marked 2 switch rules as full_case in process $proc$debouncer.v:19$1203 in module $paramod\debouncer\TOT_CKS=250000.
Marked 1 switch rules as full_case in process $proc$bin_to_disp.v:18$1 in module bin_to_disp.
Removed a total of 0 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 2 redundant assignments.
Promoted 21 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\test_top.$proc$pulses.v:138$1074'.
  Set init value: \down_byte_to_disp = 4'0000
Found init rule in `\test_top.$proc$pulses.v:137$1073'.
  Set init value: \up_byte_to_disp = 4'0000
Found init rule in `\test_top.$proc$pulses.v:135$1072'.
  Set init value: \cicles_up = 1'0
Found init rule in `\test_top.$proc$pulses.v:134$1071'.
  Set init value: \changing = 1'0
Found init rule in `\test_top.$proc$pulses.v:100$1070'.
  Set init value: \lim_tiks_down = 64'0000000000000000000000000000000000000000000000000000011111111111
Found init rule in `\test_top.$proc$pulses.v:99$1069'.
  Set init value: \lim_tiks_up = 64'0000000000000000000000000000000000000000000000000000000011111111
Found init rule in `\test_top.$proc$pulses.v:98$1068'.
  Set init value: \tik_count = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\test_top.$proc$pulses.v:97$1067'.
  Set init value: \mul_clock = 1'0
Found init rule in `\test_top.$proc$pulses.v:63$1065'.
  Set init value: \r_Switch_4 = 1'0
Found init rule in `\test_top.$proc$pulses.v:61$1064'.
  Set init value: \r_Switch_3 = 1'0
Found init rule in `\test_top.$proc$pulses.v:59$1063'.
  Set init value: \r_Switch_2 = 1'0
Found init rule in `\test_top.$proc$pulses.v:57$1062'.
  Set init value: \r_Switch_1 = 1'0
Found init rule in `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:17$1217'.
  Set init value: \rg_stdy = 1'0
Found init rule in `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:16$1216'.
  Set init value: \cnt_cks = 19'0000000000000000000
Found init rule in `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:15$1215'.
  Set init value: \rg_dbn_rdy = 1'0
Found init rule in `\bin_to_disp.$proc$bin_to_disp.v:16$2'.
  Set init value: \r_Hex_Encoding = 7'0000000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\test_top.$proc$pulses.v:138$1074'.
Creating decoders for process `\test_top.$proc$pulses.v:137$1073'.
Creating decoders for process `\test_top.$proc$pulses.v:135$1072'.
Creating decoders for process `\test_top.$proc$pulses.v:134$1071'.
Creating decoders for process `\test_top.$proc$pulses.v:100$1070'.
Creating decoders for process `\test_top.$proc$pulses.v:99$1069'.
Creating decoders for process `\test_top.$proc$pulses.v:98$1068'.
Creating decoders for process `\test_top.$proc$pulses.v:97$1067'.
Creating decoders for process `\test_top.$proc$pulses.v:67$1066'.
Creating decoders for process `\test_top.$proc$pulses.v:63$1065'.
Creating decoders for process `\test_top.$proc$pulses.v:61$1064'.
Creating decoders for process `\test_top.$proc$pulses.v:59$1063'.
Creating decoders for process `\test_top.$proc$pulses.v:57$1062'.
Creating decoders for process `\test_top.$proc$pulses.v:143$55'.
     1/132: $0\lim_tiks_down[63:0] [63]
     2/132: $0\lim_tiks_down[63:0] [59]
     3/132: $0\lim_tiks_down[63:0] [60]
     4/132: $0\lim_tiks_down[63:0] [58]
     5/132: $0\lim_tiks_down[63:0] [57]
     6/132: $0\lim_tiks_down[63:0] [56]
     7/132: $0\lim_tiks_down[63:0] [55]
     8/132: $0\lim_tiks_down[63:0] [54]
     9/132: $0\lim_tiks_down[63:0] [53]
    10/132: $0\lim_tiks_down[63:0] [52]
    11/132: $0\lim_tiks_down[63:0] [51]
    12/132: $0\lim_tiks_down[63:0] [50]
    13/132: $0\lim_tiks_down[63:0] [49]
    14/132: $0\lim_tiks_down[63:0] [48]
    15/132: $0\lim_tiks_down[63:0] [47]
    16/132: $0\lim_tiks_down[63:0] [46]
    17/132: $0\lim_tiks_down[63:0] [45]
    18/132: $0\lim_tiks_down[63:0] [44]
    19/132: $0\lim_tiks_down[63:0] [43]
    20/132: $0\lim_tiks_down[63:0] [42]
    21/132: $0\lim_tiks_down[63:0] [41]
    22/132: $0\lim_tiks_down[63:0] [40]
    23/132: $0\lim_tiks_down[63:0] [39]
    24/132: $0\lim_tiks_down[63:0] [38]
    25/132: $0\lim_tiks_down[63:0] [37]
    26/132: $0\lim_tiks_down[63:0] [36]
    27/132: $0\lim_tiks_down[63:0] [35]
    28/132: $0\lim_tiks_down[63:0] [34]
    29/132: $0\lim_tiks_down[63:0] [33]
    30/132: $0\lim_tiks_down[63:0] [32]
    31/132: $0\lim_tiks_down[63:0] [31]
    32/132: $0\lim_tiks_down[63:0] [30]
    33/132: $0\lim_tiks_down[63:0] [29]
    34/132: $0\lim_tiks_down[63:0] [28]
    35/132: $0\lim_tiks_down[63:0] [27]
    36/132: $0\lim_tiks_down[63:0] [26]
    37/132: $0\lim_tiks_down[63:0] [25]
    38/132: $0\lim_tiks_down[63:0] [24]
    39/132: $0\lim_tiks_down[63:0] [23]
    40/132: $0\lim_tiks_down[63:0] [22]
    41/132: $0\lim_tiks_down[63:0] [21]
    42/132: $0\lim_tiks_down[63:0] [20]
    43/132: $0\lim_tiks_down[63:0] [19]
    44/132: $0\lim_tiks_down[63:0] [18]
    45/132: $0\lim_tiks_down[63:0] [17]
    46/132: $0\lim_tiks_down[63:0] [16]
    47/132: $0\lim_tiks_down[63:0] [15]
    48/132: $0\lim_tiks_down[63:0] [14]
    49/132: $0\lim_tiks_down[63:0] [13]
    50/132: $0\lim_tiks_down[63:0] [12]
    51/132: $0\lim_tiks_down[63:0] [11]
    52/132: $0\lim_tiks_down[63:0] [10]
    53/132: $0\lim_tiks_down[63:0] [9]
    54/132: $0\lim_tiks_down[63:0] [8]
    55/132: $0\lim_tiks_down[63:0] [7]
    56/132: $0\lim_tiks_down[63:0] [6]
    57/132: $0\lim_tiks_down[63:0] [5]
    58/132: $0\lim_tiks_down[63:0] [4]
    59/132: $0\lim_tiks_down[63:0] [61]
    60/132: $0\lim_tiks_down[63:0] [3]
    61/132: $0\lim_tiks_down[63:0] [0]
    62/132: $0\lim_tiks_down[63:0] [2]
    63/132: $0\lim_tiks_up[63:0] [63]
    64/132: $0\lim_tiks_down[63:0] [1]
    65/132: $0\lim_tiks_up[63:0] [59]
    66/132: $0\lim_tiks_up[63:0] [60]
    67/132: $0\lim_tiks_up[63:0] [58]
    68/132: $0\lim_tiks_up[63:0] [57]
    69/132: $0\lim_tiks_up[63:0] [56]
    70/132: $0\lim_tiks_up[63:0] [55]
    71/132: $0\lim_tiks_up[63:0] [54]
    72/132: $0\lim_tiks_up[63:0] [53]
    73/132: $0\lim_tiks_up[63:0] [52]
    74/132: $0\lim_tiks_up[63:0] [51]
    75/132: $0\lim_tiks_up[63:0] [50]
    76/132: $0\lim_tiks_up[63:0] [49]
    77/132: $0\lim_tiks_up[63:0] [48]
    78/132: $0\lim_tiks_up[63:0] [47]
    79/132: $0\lim_tiks_up[63:0] [46]
    80/132: $0\lim_tiks_up[63:0] [45]
    81/132: $0\lim_tiks_up[63:0] [44]
    82/132: $0\lim_tiks_up[63:0] [43]
    83/132: $0\lim_tiks_up[63:0] [42]
    84/132: $0\lim_tiks_up[63:0] [41]
    85/132: $0\lim_tiks_up[63:0] [40]
    86/132: $0\lim_tiks_up[63:0] [39]
    87/132: $0\lim_tiks_up[63:0] [38]
    88/132: $0\lim_tiks_up[63:0] [37]
    89/132: $0\lim_tiks_up[63:0] [36]
    90/132: $0\lim_tiks_up[63:0] [35]
    91/132: $0\lim_tiks_up[63:0] [34]
    92/132: $0\lim_tiks_up[63:0] [33]
    93/132: $0\lim_tiks_up[63:0] [32]
    94/132: $0\lim_tiks_up[63:0] [31]
    95/132: $0\lim_tiks_up[63:0] [30]
    96/132: $0\lim_tiks_up[63:0] [29]
    97/132: $0\lim_tiks_up[63:0] [28]
    98/132: $0\lim_tiks_up[63:0] [27]
    99/132: $0\lim_tiks_up[63:0] [26]
   100/132: $0\lim_tiks_up[63:0] [25]
   101/132: $0\lim_tiks_up[63:0] [24]
   102/132: $0\lim_tiks_up[63:0] [23]
   103/132: $0\lim_tiks_up[63:0] [22]
   104/132: $0\lim_tiks_up[63:0] [21]
   105/132: $0\lim_tiks_up[63:0] [20]
   106/132: $0\lim_tiks_up[63:0] [19]
   107/132: $0\lim_tiks_up[63:0] [18]
   108/132: $0\lim_tiks_up[63:0] [17]
   109/132: $0\lim_tiks_up[63:0] [16]
   110/132: $0\lim_tiks_up[63:0] [15]
   111/132: $0\lim_tiks_up[63:0] [14]
   112/132: $0\lim_tiks_up[63:0] [13]
   113/132: $0\lim_tiks_up[63:0] [12]
   114/132: $0\lim_tiks_up[63:0] [11]
   115/132: $0\lim_tiks_up[63:0] [10]
   116/132: $0\lim_tiks_up[63:0] [9]
   117/132: $0\lim_tiks_up[63:0] [8]
   118/132: $0\lim_tiks_up[63:0] [7]
   119/132: $0\lim_tiks_up[63:0] [6]
   120/132: $0\lim_tiks_up[63:0] [5]
   121/132: $0\lim_tiks_up[63:0] [4]
   122/132: $0\lim_tiks_up[63:0] [61]
   123/132: $0\lim_tiks_up[63:0] [3]
   124/132: $0\lim_tiks_up[63:0] [0]
   125/132: $0\lim_tiks_up[63:0] [2]
   126/132: $0\lim_tiks_down[63:0] [62]
   127/132: $0\lim_tiks_up[63:0] [1]
   128/132: $0\up_byte_to_disp[3:0]
   129/132: $0\cicles_up[0:0]
   130/132: $0\changing[0:0]
   131/132: $0\lim_tiks_up[63:0] [62]
   132/132: $0\down_byte_to_disp[3:0]
Creating decoders for process `\test_top.$proc$pulses.v:102$18'.
     1/2: $0\tik_count[63:0]
     2/2: $0\mul_clock[0:0]
Creating decoders for process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:17$1217'.
Creating decoders for process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:16$1216'.
Creating decoders for process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:15$1215'.
Creating decoders for process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:19$1203'.
     1/3: $0\rg_stdy[0:0]
     2/3: $0\cnt_cks[18:0]
     3/3: $0\rg_dbn_rdy[0:0]
Creating decoders for process `\bin_to_disp.$proc$bin_to_disp.v:16$2'.
Creating decoders for process `\bin_to_disp.$proc$bin_to_disp.v:18$1'.
     1/1: $0\r_Hex_Encoding[6:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\test_top.\reset' from process `\test_top.$proc$pulses.v:67$1066'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\test_top.\r_Switch_1' using process `\test_top.$proc$pulses.v:143$55'.
  created $dff cell `$procdff$12188' with positive edge clock.
Creating register for signal `\test_top.\r_Switch_2' using process `\test_top.$proc$pulses.v:143$55'.
  created $dff cell `$procdff$12189' with positive edge clock.
Creating register for signal `\test_top.\r_Switch_3' using process `\test_top.$proc$pulses.v:143$55'.
  created $dff cell `$procdff$12190' with positive edge clock.
Creating register for signal `\test_top.\r_Switch_4' using process `\test_top.$proc$pulses.v:143$55'.
  created $dff cell `$procdff$12191' with positive edge clock.
Creating register for signal `\test_top.\lim_tiks_up' using process `\test_top.$proc$pulses.v:143$55'.
  created $dff cell `$procdff$12192' with positive edge clock.
Creating register for signal `\test_top.\lim_tiks_down' using process `\test_top.$proc$pulses.v:143$55'.
  created $dff cell `$procdff$12193' with positive edge clock.
Creating register for signal `\test_top.\changing' using process `\test_top.$proc$pulses.v:143$55'.
  created $dff cell `$procdff$12194' with positive edge clock.
Creating register for signal `\test_top.\cicles_up' using process `\test_top.$proc$pulses.v:143$55'.
  created $dff cell `$procdff$12195' with positive edge clock.
Creating register for signal `\test_top.\up_byte_to_disp' using process `\test_top.$proc$pulses.v:143$55'.
  created $dff cell `$procdff$12196' with positive edge clock.
Creating register for signal `\test_top.\down_byte_to_disp' using process `\test_top.$proc$pulses.v:143$55'.
  created $dff cell `$procdff$12197' with positive edge clock.
Creating register for signal `\test_top.\mul_clock' using process `\test_top.$proc$pulses.v:102$18'.
  created $dff cell `$procdff$12198' with positive edge clock.
Creating register for signal `\test_top.\tik_count' using process `\test_top.$proc$pulses.v:102$18'.
  created $dff cell `$procdff$12199' with positive edge clock.
Creating register for signal `$paramod\debouncer\TOT_CKS=250000.\rg_dbn_rdy' using process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:19$1203'.
  created $dff cell `$procdff$12200' with positive edge clock.
Creating register for signal `$paramod\debouncer\TOT_CKS=250000.\cnt_cks' using process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:19$1203'.
  created $dff cell `$procdff$12201' with positive edge clock.
Creating register for signal `$paramod\debouncer\TOT_CKS=250000.\rg_stdy' using process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:19$1203'.
  created $dff cell `$procdff$12202' with positive edge clock.
Creating register for signal `\bin_to_disp.\r_Hex_Encoding' using process `\bin_to_disp.$proc$bin_to_disp.v:18$1'.
  created $dff cell `$procdff$12203' with positive edge clock.

4.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `test_top.$proc$pulses.v:138$1074'.
Removing empty process `test_top.$proc$pulses.v:137$1073'.
Removing empty process `test_top.$proc$pulses.v:135$1072'.
Removing empty process `test_top.$proc$pulses.v:134$1071'.
Removing empty process `test_top.$proc$pulses.v:100$1070'.
Removing empty process `test_top.$proc$pulses.v:99$1069'.
Removing empty process `test_top.$proc$pulses.v:98$1068'.
Removing empty process `test_top.$proc$pulses.v:97$1067'.
Removing empty process `test_top.$proc$pulses.v:67$1066'.
Removing empty process `test_top.$proc$pulses.v:63$1065'.
Removing empty process `test_top.$proc$pulses.v:61$1064'.
Removing empty process `test_top.$proc$pulses.v:59$1063'.
Removing empty process `test_top.$proc$pulses.v:57$1062'.
Found and cleaned up 14 empty switches in `\test_top.$proc$pulses.v:143$55'.
Removing empty process `test_top.$proc$pulses.v:143$55'.
Found and cleaned up 3 empty switches in `\test_top.$proc$pulses.v:102$18'.
Removing empty process `test_top.$proc$pulses.v:102$18'.
Removing empty process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:17$1217'.
Removing empty process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:16$1216'.
Removing empty process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:15$1215'.
Found and cleaned up 5 empty switches in `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:19$1203'.
Removing empty process `$paramod\debouncer\TOT_CKS=250000.$proc$debouncer.v:19$1203'.
Removing empty process `bin_to_disp.$proc$bin_to_disp.v:16$2'.
Found and cleaned up 1 empty switch in `\bin_to_disp.$proc$bin_to_disp.v:18$1'.
Removing empty process `bin_to_disp.$proc$bin_to_disp.v:18$1'.
Cleaned up 23 empty switches.

4.4. Executing FLATTEN pass (flatten design).
Using template $paramod\debouncer\TOT_CKS=250000 for cells of type $paramod\debouncer\TOT_CKS=250000.
Using template bin_to_disp for cells of type bin_to_disp.
<suppressed ~6 debug messages>
No more expansions possible.
Deleting now unused module $paramod\debouncer\TOT_CKS=250000.
Deleting now unused module bin_to_disp.

4.5. Executing TRIBUF pass.

4.6. Executing DEMINOUT pass (demote inout ports to input or output).

4.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.
<suppressed ~1076 debug messages>

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..
Removed 14 unused cells and 1576 unused wires.
<suppressed ~271 debug messages>

4.9. Executing CHECK pass (checking for obvious problems).
checking module test_top..
found and reported 0 problems.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.
<suppressed ~720 debug messages>

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
<suppressed ~2121 debug messages>
Removed a total of 707 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$12144: \mul_clock -> 1'1
      Replacing known input bits on port A of cell $procmux$12140: \mul_clock -> 1'0
      Replacing known input bits on port B of cell $techmap\it_but_1.$procmux$12169: \it_but_1.rg_dbn_rdy -> 1'1
      Replacing known input bits on port B of cell $techmap\it_but_2.$procmux$12169: \it_but_2.rg_dbn_rdy -> 1'1
      Replacing known input bits on port B of cell $techmap\it_but_3.$procmux$12169: \it_but_3.rg_dbn_rdy -> 1'1
      Replacing known input bits on port B of cell $techmap\it_but_4.$procmux$12169: \it_but_4.rg_dbn_rdy -> 1'1
  Analyzing evaluation results.
    dead port 1/5 on $pmux $procmux$11517.
    dead port 2/5 on $pmux $procmux$11517.
    dead port 3/5 on $pmux $procmux$11517.
    dead port 1/5 on $pmux $procmux$2377.
    dead port 2/5 on $pmux $procmux$2377.
    dead port 4/5 on $pmux $procmux$2377.
    dead port 1/3 on $pmux $procmux$6562.
    dead port 1/3 on $pmux $procmux$6633.
    dead port 1/5 on $pmux $procmux$6647.
    dead port 2/5 on $pmux $procmux$6647.
    dead port 3/5 on $pmux $procmux$6647.
    dead port 1/5 on $pmux $procmux$1886.
    dead port 3/5 on $pmux $procmux$1886.
    dead port 4/5 on $pmux $procmux$1886.
    dead port 1/5 on $pmux $procmux$6662.
    dead port 2/5 on $pmux $procmux$6662.
    dead port 3/5 on $pmux $procmux$6662.
    dead port 1/5 on $pmux $procmux$11588.
    dead port 2/5 on $pmux $procmux$11588.
    dead port 3/5 on $pmux $procmux$11588.
    dead port 2/5 on $pmux $procmux$1975.
    dead port 3/5 on $pmux $procmux$1975.
    dead port 4/5 on $pmux $procmux$1975.
    dead port 2/5 on $pmux $procmux$6676.
    dead port 3/5 on $pmux $procmux$6676.
    dead port 4/5 on $pmux $procmux$6676.
    dead port 2/5 on $pmux $procmux$6690.
    dead port 3/5 on $pmux $procmux$6690.
    dead port 4/5 on $pmux $procmux$6690.
    dead port 1/5 on $pmux $procmux$6706.
    dead port 2/5 on $pmux $procmux$6706.
    dead port 4/5 on $pmux $procmux$6706.
    dead port 1/5 on $pmux $procmux$2414.
    dead port 3/5 on $pmux $procmux$2414.
    dead port 4/5 on $pmux $procmux$2414.
    dead port 1/5 on $pmux $procmux$6722.
    dead port 2/5 on $pmux $procmux$6722.
    dead port 4/5 on $pmux $procmux$6722.
    dead port 1/5 on $pmux $procmux$6739.
    dead port 3/5 on $pmux $procmux$6739.
    dead port 4/5 on $pmux $procmux$6739.
    dead port 1/5 on $pmux $procmux$6756.
    dead port 3/5 on $pmux $procmux$6756.
    dead port 4/5 on $pmux $procmux$6756.
    dead port 1/4 on $pmux $procmux$11802.
    dead port 2/4 on $pmux $procmux$11802.
    dead port 2/5 on $pmux $procmux$6774.
    dead port 3/5 on $pmux $procmux$6774.
    dead port 4/5 on $pmux $procmux$6774.
    dead port 1/5 on $pmux $procmux$5534.
    dead port 2/5 on $pmux $procmux$5534.
    dead port 3/5 on $pmux $procmux$5534.
    dead port 2/5 on $pmux $procmux$6792.
    dead port 3/5 on $pmux $procmux$6792.
    dead port 4/5 on $pmux $procmux$6792.
    dead port 1/5 on $pmux $procmux$2451.
    dead port 3/5 on $pmux $procmux$2451.
    dead port 4/5 on $pmux $procmux$2451.
    dead port 1/5 on $pmux $procmux$6811.
    dead port 2/5 on $pmux $procmux$6811.
    dead port 3/5 on $pmux $procmux$6811.
    dead port 1/4 on $pmux $procmux$11873.
    dead port 2/4 on $pmux $procmux$11873.
    dead port 1/5 on $pmux $procmux$6830.
    dead port 2/5 on $pmux $procmux$6830.
    dead port 3/5 on $pmux $procmux$6830.
    dead port 1/5 on $pmux $procmux$6850.
    dead port 2/5 on $pmux $procmux$6850.
    dead port 4/5 on $pmux $procmux$6850.
    dead port 2/3 on $pmux $procmux$11885.
    dead port 1/5 on $pmux $procmux$6870.
    dead port 2/5 on $pmux $procmux$6870.
    dead port 4/5 on $pmux $procmux$6870.
    dead port 1/5 on $pmux $procmux$1915.
    dead port 3/5 on $pmux $procmux$1915.
    dead port 4/5 on $pmux $procmux$1915.
    dead port 1/5 on $pmux $procmux$6891.
    dead port 3/5 on $pmux $procmux$6891.
    dead port 4/5 on $pmux $procmux$6891.
    dead port 2/3 on $pmux $procmux$11897.
    dead port 1/5 on $pmux $procmux$6912.
    dead port 3/5 on $pmux $procmux$6912.
    dead port 4/5 on $pmux $procmux$6912.
    dead port 2/5 on $pmux $procmux$2489.
    dead port 3/5 on $pmux $procmux$2489.
    dead port 4/5 on $pmux $procmux$2489.
    dead port 2/5 on $pmux $procmux$6934.
    dead port 3/5 on $pmux $procmux$6934.
    dead port 4/5 on $pmux $procmux$6934.
    dead port 1/3 on $pmux $procmux$11969.
    dead port 2/5 on $pmux $procmux$6956.
    dead port 3/5 on $pmux $procmux$6956.
    dead port 4/5 on $pmux $procmux$6956.
    dead port 1/5 on $pmux $procmux$6979.
    dead port 2/5 on $pmux $procmux$6979.
    dead port 3/5 on $pmux $procmux$6979.
    dead port 1/3 on $pmux $procmux$12040.
    dead port 1/5 on $pmux $procmux$7002.
    dead port 2/5 on $pmux $procmux$7002.
    dead port 3/5 on $pmux $procmux$7002.
    dead port 1/5 on $pmux $procmux$7026.
    dead port 2/5 on $pmux $procmux$7026.
    dead port 4/5 on $pmux $procmux$7026.
    dead port 1/5 on $pmux $procmux$7050.
    dead port 2/5 on $pmux $procmux$7050.
    dead port 4/5 on $pmux $procmux$7050.
    dead port 2/5 on $pmux $procmux$2527.
    dead port 3/5 on $pmux $procmux$2527.
    dead port 4/5 on $pmux $procmux$2527.
    dead port 1/5 on $pmux $procmux$7075.
    dead port 3/5 on $pmux $procmux$7075.
    dead port 4/5 on $pmux $procmux$7075.
    dead port 1/5 on $pmux $procmux$7100.
    dead port 3/5 on $pmux $procmux$7100.
    dead port 4/5 on $pmux $procmux$7100.
    dead port 2/5 on $pmux $procmux$7126.
    dead port 3/5 on $pmux $procmux$7126.
    dead port 4/5 on $pmux $procmux$7126.
    dead port 2/3 on $pmux $procmux$12090.
    dead port 2/5 on $pmux $procmux$7152.
    dead port 3/5 on $pmux $procmux$7152.
    dead port 4/5 on $pmux $procmux$7152.
    dead port 1/5 on $pmux $procmux$7179.
    dead port 2/5 on $pmux $procmux$7179.
    dead port 3/5 on $pmux $procmux$7179.
    dead port 2/3 on $pmux $procmux$12102.
    dead port 1/5 on $pmux $procmux$7206.
    dead port 2/5 on $pmux $procmux$7206.
    dead port 3/5 on $pmux $procmux$7206.
    dead port 1/5 on $pmux $procmux$7234.
    dead port 2/5 on $pmux $procmux$7234.
    dead port 4/5 on $pmux $procmux$7234.
    dead port 1/5 on $pmux $procmux$2566.
    dead port 2/5 on $pmux $procmux$2566.
    dead port 3/5 on $pmux $procmux$2566.
    dead port 1/5 on $pmux $procmux$7262.
    dead port 2/5 on $pmux $procmux$7262.
    dead port 4/5 on $pmux $procmux$7262.
    dead port 1/5 on $pmux $procmux$7291.
    dead port 3/5 on $pmux $procmux$7291.
    dead port 4/5 on $pmux $procmux$7291.
    dead port 1/5 on $pmux $procmux$7320.
    dead port 3/5 on $pmux $procmux$7320.
    dead port 4/5 on $pmux $procmux$7320.
    dead port 2/5 on $pmux $procmux$7350.
    dead port 3/5 on $pmux $procmux$7350.
    dead port 4/5 on $pmux $procmux$7350.
    dead port 2/5 on $pmux $procmux$7380.
    dead port 3/5 on $pmux $procmux$7380.
    dead port 4/5 on $pmux $procmux$7380.
    dead port 1/5 on $pmux $procmux$7411.
    dead port 2/5 on $pmux $procmux$7411.
    dead port 3/5 on $pmux $procmux$7411.
    dead port 1/5 on $pmux $procmux$7442.
    dead port 2/5 on $pmux $procmux$7442.
    dead port 3/5 on $pmux $procmux$7442.
    dead port 1/5 on $pmux $procmux$2605.
    dead port 2/5 on $pmux $procmux$2605.
    dead port 3/5 on $pmux $procmux$2605.
    dead port 1/5 on $pmux $procmux$7474.
    dead port 2/5 on $pmux $procmux$7474.
    dead port 4/5 on $pmux $procmux$7474.
    dead port 1/5 on $pmux $procmux$1242.
    dead port 2/5 on $pmux $procmux$1242.
    dead port 3/5 on $pmux $procmux$1242.
    dead port 1/5 on $pmux $procmux$7506.
    dead port 2/5 on $pmux $procmux$7506.
    dead port 4/5 on $pmux $procmux$7506.
    dead port 1/5 on $pmux $procmux$7539.
    dead port 3/5 on $pmux $procmux$7539.
    dead port 4/5 on $pmux $procmux$7539.
    dead port 1/5 on $pmux $procmux$1257.
    dead port 2/5 on $pmux $procmux$1257.
    dead port 3/5 on $pmux $procmux$1257.
    dead port 1/5 on $pmux $procmux$7572.
    dead port 3/5 on $pmux $procmux$7572.
    dead port 4/5 on $pmux $procmux$7572.
    dead port 2/5 on $pmux $procmux$7606.
    dead port 3/5 on $pmux $procmux$7606.
    dead port 4/5 on $pmux $procmux$7606.
    dead port 2/5 on $pmux $procmux$7640.
    dead port 3/5 on $pmux $procmux$7640.
    dead port 4/5 on $pmux $procmux$7640.
    dead port 1/5 on $pmux $procmux$2645.
    dead port 2/5 on $pmux $procmux$2645.
    dead port 4/5 on $pmux $procmux$2645.
    dead port 2/5 on $pmux $procmux$1271.
    dead port 3/5 on $pmux $procmux$1271.
    dead port 4/5 on $pmux $procmux$1271.
    dead port 1/5 on $pmux $procmux$7675.
    dead port 2/5 on $pmux $procmux$7675.
    dead port 3/5 on $pmux $procmux$7675.
    dead port 1/5 on $pmux $procmux$5601.
    dead port 2/5 on $pmux $procmux$5601.
    dead port 3/5 on $pmux $procmux$5601.
    dead port 1/5 on $pmux $procmux$7710.
    dead port 2/5 on $pmux $procmux$7710.
    dead port 3/5 on $pmux $procmux$7710.
    dead port 1/5 on $pmux $procmux$7746.
    dead port 2/5 on $pmux $procmux$7746.
    dead port 4/5 on $pmux $procmux$7746.
    dead port 2/5 on $pmux $procmux$1285.
    dead port 3/5 on $pmux $procmux$1285.
    dead port 4/5 on $pmux $procmux$1285.
    dead port 1/5 on $pmux $procmux$7782.
    dead port 2/5 on $pmux $procmux$7782.
    dead port 4/5 on $pmux $procmux$7782.
    dead port 1/5 on $pmux $procmux$7819.
    dead port 3/5 on $pmux $procmux$7819.
    dead port 4/5 on $pmux $procmux$7819.
    dead port 1/5 on $pmux $procmux$1301.
    dead port 2/5 on $pmux $procmux$1301.
    dead port 4/5 on $pmux $procmux$1301.
    dead port 1/5 on $pmux $procmux$7856.
    dead port 3/5 on $pmux $procmux$7856.
    dead port 4/5 on $pmux $procmux$7856.
    dead port 1/5 on $pmux $procmux$2685.
    dead port 2/5 on $pmux $procmux$2685.
    dead port 4/5 on $pmux $procmux$2685.
    dead port 2/5 on $pmux $procmux$7894.
    dead port 3/5 on $pmux $procmux$7894.
    dead port 4/5 on $pmux $procmux$7894.
    dead port 1/5 on $pmux $procmux$5669.
    dead port 2/5 on $pmux $procmux$5669.
    dead port 4/5 on $pmux $procmux$5669.
    dead port 2/5 on $pmux $procmux$7932.
    dead port 3/5 on $pmux $procmux$7932.
    dead port 4/5 on $pmux $procmux$7932.
    dead port 1/5 on $pmux $procmux$1317.
    dead port 2/5 on $pmux $procmux$1317.
    dead port 4/5 on $pmux $procmux$1317.
    dead port 1/5 on $pmux $procmux$7971.
    dead port 2/5 on $pmux $procmux$7971.
    dead port 3/5 on $pmux $procmux$7971.
    dead port 2/5 on $pmux $procmux$11350.
    dead port 3/5 on $pmux $procmux$11350.
    dead port 4/5 on $pmux $procmux$11350.
    dead port 1/5 on $pmux $procmux$8010.
    dead port 2/5 on $pmux $procmux$8010.
    dead port 3/5 on $pmux $procmux$8010.
    dead port 1/5 on $pmux $procmux$8050.
    dead port 2/5 on $pmux $procmux$8050.
    dead port 4/5 on $pmux $procmux$8050.
    dead port 1/5 on $pmux $procmux$1334.
    dead port 3/5 on $pmux $procmux$1334.
    dead port 4/5 on $pmux $procmux$1334.
    dead port 1/5 on $pmux $procmux$2305.
    dead port 2/5 on $pmux $procmux$2305.
    dead port 3/5 on $pmux $procmux$2305.
    dead port 1/5 on $pmux $procmux$8090.
    dead port 2/5 on $pmux $procmux$8090.
    dead port 4/5 on $pmux $procmux$8090.
    dead port 1/5 on $pmux $procmux$8131.
    dead port 3/5 on $pmux $procmux$8131.
    dead port 4/5 on $pmux $procmux$8131.
    dead port 1/5 on $pmux $procmux$2726.
    dead port 3/5 on $pmux $procmux$2726.
    dead port 4/5 on $pmux $procmux$2726.
    dead port 1/5 on $pmux $procmux$1351.
    dead port 3/5 on $pmux $procmux$1351.
    dead port 4/5 on $pmux $procmux$1351.
    dead port 1/5 on $pmux $procmux$8172.
    dead port 3/5 on $pmux $procmux$8172.
    dead port 4/5 on $pmux $procmux$8172.
    dead port 1/5 on $pmux $procmux$2006.
    dead port 2/5 on $pmux $procmux$2006.
    dead port 3/5 on $pmux $procmux$2006.
    dead port 1/5 on $pmux $procmux$5737.
    dead port 2/5 on $pmux $procmux$5737.
    dead port 4/5 on $pmux $procmux$5737.
    dead port 2/5 on $pmux $procmux$8214.
    dead port 3/5 on $pmux $procmux$8214.
    dead port 4/5 on $pmux $procmux$8214.
    dead port 2/5 on $pmux $procmux$8256.
    dead port 3/5 on $pmux $procmux$8256.
    dead port 4/5 on $pmux $procmux$8256.
    dead port 2/5 on $pmux $procmux$1369.
    dead port 3/5 on $pmux $procmux$1369.
    dead port 4/5 on $pmux $procmux$1369.
    dead port 1/5 on $pmux $procmux$8299.
    dead port 2/5 on $pmux $procmux$8299.
    dead port 3/5 on $pmux $procmux$8299.
    dead port 1/5 on $pmux $procmux$8342.
    dead port 2/5 on $pmux $procmux$8342.
    dead port 3/5 on $pmux $procmux$8342.
    dead port 1/5 on $pmux $procmux$8386.
    dead port 2/5 on $pmux $procmux$8386.
    dead port 4/5 on $pmux $procmux$8386.
    dead port 2/5 on $pmux $procmux$1387.
    dead port 3/5 on $pmux $procmux$1387.
    dead port 4/5 on $pmux $procmux$1387.
    dead port 1/5 on $pmux $procmux$2767.
    dead port 3/5 on $pmux $procmux$2767.
    dead port 4/5 on $pmux $procmux$2767.
    dead port 1/5 on $pmux $procmux$8430.
    dead port 2/5 on $pmux $procmux$8430.
    dead port 4/5 on $pmux $procmux$8430.
    dead port 1/5 on $pmux $procmux$10050.
    dead port 2/5 on $pmux $procmux$10050.
    dead port 4/5 on $pmux $procmux$10050.
    dead port 1/5 on $pmux $procmux$8475.
    dead port 3/5 on $pmux $procmux$8475.
    dead port 4/5 on $pmux $procmux$8475.
    dead port 1/5 on $pmux $procmux$5806.
    dead port 3/5 on $pmux $procmux$5806.
    dead port 4/5 on $pmux $procmux$5806.
    dead port 1/5 on $pmux $procmux$1406.
    dead port 2/5 on $pmux $procmux$1406.
    dead port 3/5 on $pmux $procmux$1406.
    dead port 1/5 on $pmux $procmux$8520.
    dead port 3/5 on $pmux $procmux$8520.
    dead port 4/5 on $pmux $procmux$8520.
    dead port 1/5 on $pmux $procmux$1645.
    dead port 2/5 on $pmux $procmux$1645.
    dead port 4/5 on $pmux $procmux$1645.
    dead port 2/5 on $pmux $procmux$8566.
    dead port 3/5 on $pmux $procmux$8566.
    dead port 4/5 on $pmux $procmux$8566.
    dead port 2/5 on $pmux $procmux$8612.
    dead port 3/5 on $pmux $procmux$8612.
    dead port 4/5 on $pmux $procmux$8612.
    dead port 1/5 on $pmux $procmux$1425.
    dead port 2/5 on $pmux $procmux$1425.
    dead port 3/5 on $pmux $procmux$1425.
    dead port 1/5 on $pmux $procmux$8659.
    dead port 2/5 on $pmux $procmux$8659.
    dead port 3/5 on $pmux $procmux$8659.
    dead port 1/5 on $pmux $procmux$8706.
    dead port 2/5 on $pmux $procmux$8706.
    dead port 3/5 on $pmux $procmux$8706.
    dead port 1/5 on $pmux $procmux$8754.
    dead port 2/5 on $pmux $procmux$8754.
    dead port 4/5 on $pmux $procmux$8754.
    dead port 1/5 on $pmux $procmux$1445.
    dead port 2/5 on $pmux $procmux$1445.
    dead port 4/5 on $pmux $procmux$1445.
    dead port 1/5 on $pmux $procmux$5875.
    dead port 3/5 on $pmux $procmux$5875.
    dead port 4/5 on $pmux $procmux$5875.
    dead port 2/5 on $pmux $procmux$2809.
    dead port 3/5 on $pmux $procmux$2809.
    dead port 4/5 on $pmux $procmux$2809.
    dead port 2/5 on $pmux $procmux$11420.
    dead port 3/5 on $pmux $procmux$11420.
    dead port 4/5 on $pmux $procmux$11420.
    dead port 1/5 on $pmux $procmux$8802.
    dead port 2/5 on $pmux $procmux$8802.
    dead port 4/5 on $pmux $procmux$8802.
    dead port 1/5 on $pmux $procmux$8851.
    dead port 3/5 on $pmux $procmux$8851.
    dead port 4/5 on $pmux $procmux$8851.
    dead port 1/5 on $pmux $procmux$1465.
    dead port 2/5 on $pmux $procmux$1465.
    dead port 4/5 on $pmux $procmux$1465.
    dead port 1/5 on $pmux $procmux$8900.
    dead port 3/5 on $pmux $procmux$8900.
    dead port 4/5 on $pmux $procmux$8900.
    dead port 2/5 on $pmux $procmux$8950.
    dead port 3/5 on $pmux $procmux$8950.
    dead port 4/5 on $pmux $procmux$8950.
    dead port 2/5 on $pmux $procmux$9000.
    dead port 3/5 on $pmux $procmux$9000.
    dead port 4/5 on $pmux $procmux$9000.
    dead port 1/5 on $pmux $procmux$1486.
    dead port 3/5 on $pmux $procmux$1486.
    dead port 4/5 on $pmux $procmux$1486.
    dead port 2/5 on $pmux $procmux$5945.
    dead port 3/5 on $pmux $procmux$5945.
    dead port 4/5 on $pmux $procmux$5945.
    dead port 1/5 on $pmux $procmux$9051.
    dead port 2/5 on $pmux $procmux$9051.
    dead port 3/5 on $pmux $procmux$9051.
    dead port 2/5 on $pmux $procmux$2851.
    dead port 3/5 on $pmux $procmux$2851.
    dead port 4/5 on $pmux $procmux$2851.
    dead port 1/5 on $pmux $procmux$1857.
    dead port 2/5 on $pmux $procmux$1857.
    dead port 4/5 on $pmux $procmux$1857.
    dead port 1/5 on $pmux $procmux$9102.
    dead port 2/5 on $pmux $procmux$9102.
    dead port 3/5 on $pmux $procmux$9102.
    dead port 1/5 on $pmux $procmux$9154.
    dead port 2/5 on $pmux $procmux$9154.
    dead port 4/5 on $pmux $procmux$9154.
    dead port 1/5 on $pmux $procmux$1507.
    dead port 3/5 on $pmux $procmux$1507.
    dead port 4/5 on $pmux $procmux$1507.
    dead port 1/5 on $pmux $procmux$9206.
    dead port 2/5 on $pmux $procmux$9206.
    dead port 4/5 on $pmux $procmux$9206.
    dead port 1/5 on $pmux $procmux$10110.
    dead port 2/5 on $pmux $procmux$10110.
    dead port 4/5 on $pmux $procmux$10110.
    dead port 1/5 on $pmux $procmux$9259.
    dead port 3/5 on $pmux $procmux$9259.
    dead port 4/5 on $pmux $procmux$9259.
    dead port 2/5 on $pmux $procmux$1529.
    dead port 3/5 on $pmux $procmux$1529.
    dead port 4/5 on $pmux $procmux$1529.
    dead port 1/5 on $pmux $procmux$9312.
    dead port 3/5 on $pmux $procmux$9312.
    dead port 4/5 on $pmux $procmux$9312.
    dead port 2/5 on $pmux $procmux$6015.
    dead port 3/5 on $pmux $procmux$6015.
    dead port 4/5 on $pmux $procmux$6015.
    dead port 2/5 on $pmux $procmux$9366.
    dead port 3/5 on $pmux $procmux$9366.
    dead port 4/5 on $pmux $procmux$9366.
    dead port 1/5 on $pmux $procmux$2894.
    dead port 2/5 on $pmux $procmux$2894.
    dead port 3/5 on $pmux $procmux$2894.
    dead port 2/5 on $pmux $procmux$9420.
    dead port 3/5 on $pmux $procmux$9420.
    dead port 4/5 on $pmux $procmux$9420.
    dead port 2/5 on $pmux $procmux$1551.
    dead port 3/5 on $pmux $procmux$1551.
    dead port 4/5 on $pmux $procmux$1551.
    dead port 1/5 on $pmux $procmux$9475.
    dead port 2/5 on $pmux $procmux$9475.
    dead port 3/5 on $pmux $procmux$9475.
    dead port 2/4 on $pmux $procmux$11434.
    dead port 3/4 on $pmux $procmux$11434.
    dead port 1/5 on $pmux $procmux$9530.
    dead port 2/5 on $pmux $procmux$9530.
    dead port 3/5 on $pmux $procmux$9530.
    dead port 1/5 on $pmux $procmux$9586.
    dead port 2/5 on $pmux $procmux$9586.
    dead port 4/5 on $pmux $procmux$9586.
    dead port 1/5 on $pmux $procmux$1574.
    dead port 2/5 on $pmux $procmux$1574.
    dead port 3/5 on $pmux $procmux$1574.
    dead port 1/5 on $pmux $procmux$9642.
    dead port 2/5 on $pmux $procmux$9642.
    dead port 4/5 on $pmux $procmux$9642.
    dead port 2/4 on $pmux $procmux$6029.
    dead port 3/4 on $pmux $procmux$6029.
    dead port 1/5 on $pmux $procmux$9699.
    dead port 3/5 on $pmux $procmux$9699.
    dead port 4/5 on $pmux $procmux$9699.
    dead port 1/5 on $pmux $procmux$1597.
    dead port 2/5 on $pmux $procmux$1597.
    dead port 3/5 on $pmux $procmux$1597.
    dead port 1/5 on $pmux $procmux$9756.
    dead port 3/5 on $pmux $procmux$9756.
    dead port 4/5 on $pmux $procmux$9756.
    dead port 1/5 on $pmux $procmux$2937.
    dead port 2/5 on $pmux $procmux$2937.
    dead port 3/5 on $pmux $procmux$2937.
    dead port 1/5 on $pmux $procmux$11280.
    dead port 3/5 on $pmux $procmux$11280.
    dead port 4/5 on $pmux $procmux$11280.
    dead port 2/5 on $pmux $procmux$9814.
    dead port 3/5 on $pmux $procmux$9814.
    dead port 4/5 on $pmux $procmux$9814.
    dead port 2/5 on $pmux $procmux$9872.
    dead port 3/5 on $pmux $procmux$9872.
    dead port 4/5 on $pmux $procmux$9872.
    dead port 1/5 on $pmux $procmux$1621.
    dead port 2/5 on $pmux $procmux$1621.
    dead port 4/5 on $pmux $procmux$1621.
    dead port 1/5 on $pmux $procmux$9931.
    dead port 2/5 on $pmux $procmux$9931.
    dead port 3/5 on $pmux $procmux$9931.
    dead port 1/5 on $pmux $procmux$9990.
    dead port 2/5 on $pmux $procmux$9990.
    dead port 3/5 on $pmux $procmux$9990.
    dead port 1/5 on $pmux $procmux$2981.
    dead port 2/5 on $pmux $procmux$2981.
    dead port 4/5 on $pmux $procmux$2981.
    dead port 1/5 on $pmux $procmux$10171.
    dead port 3/5 on $pmux $procmux$10171.
    dead port 4/5 on $pmux $procmux$10171.
    dead port 1/5 on $pmux $procmux$3025.
    dead port 2/5 on $pmux $procmux$3025.
    dead port 4/5 on $pmux $procmux$3025.
    dead port 1/5 on $pmux $procmux$2037.
    dead port 2/5 on $pmux $procmux$2037.
    dead port 3/5 on $pmux $procmux$2037.
    dead port 1/5 on $pmux $procmux$1670.
    dead port 3/5 on $pmux $procmux$1670.
    dead port 4/5 on $pmux $procmux$1670.
    dead port 1/5 on $pmux $procmux$3070.
    dead port 3/5 on $pmux $procmux$3070.
    dead port 4/5 on $pmux $procmux$3070.
    dead port 2/4 on $pmux $procmux$6042.
    dead port 3/4 on $pmux $procmux$6042.
    dead port 1/5 on $pmux $procmux$3115.
    dead port 3/5 on $pmux $procmux$3115.
    dead port 4/5 on $pmux $procmux$3115.
    dead port 1/5 on $pmux $procmux$10232.
    dead port 3/5 on $pmux $procmux$10232.
    dead port 4/5 on $pmux $procmux$10232.
    dead port 1/5 on $pmux $procmux$2341.
    dead port 2/5 on $pmux $procmux$2341.
    dead port 4/5 on $pmux $procmux$2341.
    dead port 2/5 on $pmux $procmux$3161.
    dead port 3/5 on $pmux $procmux$3161.
    dead port 4/5 on $pmux $procmux$3161.
    dead port 2/5 on $pmux $procmux$3207.
    dead port 3/5 on $pmux $procmux$3207.
    dead port 4/5 on $pmux $procmux$3207.
    dead port 2/5 on $pmux $procmux$10294.
    dead port 3/5 on $pmux $procmux$10294.
    dead port 4/5 on $pmux $procmux$10294.
    dead port 1/5 on $pmux $procmux$3254.
    dead port 2/5 on $pmux $procmux$3254.
    dead port 3/5 on $pmux $procmux$3254.
    dead port 1/5 on $pmux $procmux$3301.
    dead port 2/5 on $pmux $procmux$3301.
    dead port 3/5 on $pmux $procmux$3301.
    dead port 1/5 on $pmux $procmux$2069.
    dead port 2/5 on $pmux $procmux$2069.
    dead port 4/5 on $pmux $procmux$2069.
    dead port 1/5 on $pmux $procmux$3349.
    dead port 2/5 on $pmux $procmux$3349.
    dead port 4/5 on $pmux $procmux$3349.
    dead port 2/5 on $pmux $procmux$10356.
    dead port 3/5 on $pmux $procmux$10356.
    dead port 4/5 on $pmux $procmux$10356.
    dead port 1/5 on $pmux $procmux$6112.
    dead port 2/5 on $pmux $procmux$6112.
    dead port 3/5 on $pmux $procmux$6112.
    dead port 1/5 on $pmux $procmux$3397.
    dead port 2/5 on $pmux $procmux$3397.
    dead port 4/5 on $pmux $procmux$3397.
    dead port 1/5 on $pmux $procmux$1695.
    dead port 3/5 on $pmux $procmux$1695.
    dead port 4/5 on $pmux $procmux$1695.
    dead port 2/5 on $pmux $procmux$1945.
    dead port 3/5 on $pmux $procmux$1945.
    dead port 4/5 on $pmux $procmux$1945.
    dead port 1/5 on $pmux $procmux$3446.
    dead port 3/5 on $pmux $procmux$3446.
    dead port 4/5 on $pmux $procmux$3446.
    dead port 1/5 on $pmux $procmux$3495.
    dead port 3/5 on $pmux $procmux$3495.
    dead port 4/5 on $pmux $procmux$3495.
    dead port 1/5 on $pmux $procmux$10419.
    dead port 2/5 on $pmux $procmux$10419.
    dead port 3/5 on $pmux $procmux$10419.
    dead port 2/4 on $pmux $procmux$11447.
    dead port 3/4 on $pmux $procmux$11447.
    dead port 2/5 on $pmux $procmux$3545.
    dead port 3/5 on $pmux $procmux$3545.
    dead port 4/5 on $pmux $procmux$3545.
    dead port 2/5 on $pmux $procmux$3595.
    dead port 3/5 on $pmux $procmux$3595.
    dead port 4/5 on $pmux $procmux$3595.
    dead port 1/5 on $pmux $procmux$2101.
    dead port 2/5 on $pmux $procmux$2101.
    dead port 4/5 on $pmux $procmux$2101.
    dead port 1/5 on $pmux $procmux$10482.
    dead port 2/5 on $pmux $procmux$10482.
    dead port 3/5 on $pmux $procmux$10482.
    dead port 1/5 on $pmux $procmux$3646.
    dead port 2/5 on $pmux $procmux$3646.
    dead port 3/5 on $pmux $procmux$3646.
    dead port 1/5 on $pmux $procmux$3697.
    dead port 2/5 on $pmux $procmux$3697.
    dead port 3/5 on $pmux $procmux$3697.
    dead port 1/5 on $pmux $procmux$3749.
    dead port 2/5 on $pmux $procmux$3749.
    dead port 4/5 on $pmux $procmux$3749.
    dead port 1/5 on $pmux $procmux$10546.
    dead port 2/5 on $pmux $procmux$10546.
    dead port 4/5 on $pmux $procmux$10546.
    dead port 2/5 on $pmux $procmux$1721.
    dead port 3/5 on $pmux $procmux$1721.
    dead port 4/5 on $pmux $procmux$1721.
    dead port 1/5 on $pmux $procmux$3801.
    dead port 2/5 on $pmux $procmux$3801.
    dead port 4/5 on $pmux $procmux$3801.
    dead port 1/5 on $pmux $procmux$6183.
    dead port 2/5 on $pmux $procmux$6183.
    dead port 3/5 on $pmux $procmux$6183.
    dead port 1/5 on $pmux $procmux$3854.
    dead port 3/5 on $pmux $procmux$3854.
    dead port 4/5 on $pmux $procmux$3854.
    dead port 1/5 on $pmux $procmux$3907.
    dead port 3/5 on $pmux $procmux$3907.
    dead port 4/5 on $pmux $procmux$3907.
    dead port 1/5 on $pmux $procmux$10610.
    dead port 2/5 on $pmux $procmux$10610.
    dead port 4/5 on $pmux $procmux$10610.
    dead port 1/5 on $pmux $procmux$2134.
    dead port 3/5 on $pmux $procmux$2134.
    dead port 4/5 on $pmux $procmux$2134.
    dead port 2/5 on $pmux $procmux$3961.
    dead port 3/5 on $pmux $procmux$3961.
    dead port 4/5 on $pmux $procmux$3961.
    dead port 2/5 on $pmux $procmux$4015.
    dead port 3/5 on $pmux $procmux$4015.
    dead port 4/5 on $pmux $procmux$4015.
    dead port 1/5 on $pmux $procmux$10675.
    dead port 3/5 on $pmux $procmux$10675.
    dead port 4/5 on $pmux $procmux$10675.
    dead port 1/5 on $pmux $procmux$4070.
    dead port 2/5 on $pmux $procmux$4070.
    dead port 3/5 on $pmux $procmux$4070.
    dead port 1/5 on $pmux $procmux$4125.
    dead port 2/5 on $pmux $procmux$4125.
    dead port 3/5 on $pmux $procmux$4125.
    dead port 2/5 on $pmux $procmux$1747.
    dead port 3/5 on $pmux $procmux$1747.
    dead port 4/5 on $pmux $procmux$1747.
    dead port 1/5 on $pmux $procmux$4181.
    dead port 2/5 on $pmux $procmux$4181.
    dead port 4/5 on $pmux $procmux$4181.
    dead port 1/5 on $pmux $procmux$10740.
    dead port 3/5 on $pmux $procmux$10740.
    dead port 4/5 on $pmux $procmux$10740.
    dead port 1/5 on $pmux $procmux$4237.
    dead port 2/5 on $pmux $procmux$4237.
    dead port 4/5 on $pmux $procmux$4237.
    dead port 1/5 on $pmux $procmux$2167.
    dead port 3/5 on $pmux $procmux$2167.
    dead port 4/5 on $pmux $procmux$2167.
    dead port 1/5 on $pmux $procmux$4294.
    dead port 3/5 on $pmux $procmux$4294.
    dead port 4/5 on $pmux $procmux$4294.
    dead port 1/5 on $pmux $procmux$4351.
    dead port 3/5 on $pmux $procmux$4351.
    dead port 4/5 on $pmux $procmux$4351.
    dead port 2/5 on $pmux $procmux$10806.
    dead port 3/5 on $pmux $procmux$10806.
    dead port 4/5 on $pmux $procmux$10806.
    dead port 2/5 on $pmux $procmux$4409.
    dead port 3/5 on $pmux $procmux$4409.
    dead port 4/5 on $pmux $procmux$4409.
    dead port 2/5 on $pmux $procmux$4467.
    dead port 3/5 on $pmux $procmux$4467.
    dead port 4/5 on $pmux $procmux$4467.
    dead port 2/5 on $pmux $procmux$10872.
    dead port 3/5 on $pmux $procmux$10872.
    dead port 4/5 on $pmux $procmux$10872.
    dead port 1/5 on $pmux $procmux$4526.
    dead port 2/5 on $pmux $procmux$4526.
    dead port 3/5 on $pmux $procmux$4526.
    dead port 1/5 on $pmux $procmux$1774.
    dead port 2/5 on $pmux $procmux$1774.
    dead port 3/5 on $pmux $procmux$1774.
    dead port 1/5 on $pmux $procmux$4585.
    dead port 2/5 on $pmux $procmux$4585.
    dead port 3/5 on $pmux $procmux$4585.
    dead port 2/5 on $pmux $procmux$2201.
    dead port 3/5 on $pmux $procmux$2201.
    dead port 4/5 on $pmux $procmux$2201.
    dead port 1/5 on $pmux $procmux$4645.
    dead port 2/5 on $pmux $procmux$4645.
    dead port 4/5 on $pmux $procmux$4645.
    dead port 1/5 on $pmux $procmux$10939.
    dead port 2/5 on $pmux $procmux$10939.
    dead port 3/5 on $pmux $procmux$10939.
    dead port 1/5 on $pmux $procmux$4705.
    dead port 2/5 on $pmux $procmux$4705.
    dead port 4/5 on $pmux $procmux$4705.
    dead port 1/4 on $pmux $procmux$6397.
    dead port 2/4 on $pmux $procmux$6397.
    dead port 1/5 on $pmux $procmux$4766.
    dead port 3/5 on $pmux $procmux$4766.
    dead port 4/5 on $pmux $procmux$4766.
    dead port 1/5 on $pmux $procmux$4827.
    dead port 3/5 on $pmux $procmux$4827.
    dead port 4/5 on $pmux $procmux$4827.
    dead port 1/5 on $pmux $procmux$11006.
    dead port 2/5 on $pmux $procmux$11006.
    dead port 3/5 on $pmux $procmux$11006.
    dead port 2/5 on $pmux $procmux$4889.
    dead port 3/5 on $pmux $procmux$4889.
    dead port 4/5 on $pmux $procmux$4889.
    dead port 2/5 on $pmux $procmux$4951.
    dead port 3/5 on $pmux $procmux$4951.
    dead port 4/5 on $pmux $procmux$4951.
    dead port 2/5 on $pmux $procmux$2235.
    dead port 3/5 on $pmux $procmux$2235.
    dead port 4/5 on $pmux $procmux$2235.
    dead port 1/5 on $pmux $procmux$11074.
    dead port 2/5 on $pmux $procmux$11074.
    dead port 4/5 on $pmux $procmux$11074.
    dead port 1/5 on $pmux $procmux$5014.
    dead port 2/5 on $pmux $procmux$5014.
    dead port 3/5 on $pmux $procmux$5014.
    dead port 1/5 on $pmux $procmux$1801.
    dead port 2/5 on $pmux $procmux$1801.
    dead port 3/5 on $pmux $procmux$1801.
    dead port 1/5 on $pmux $procmux$5077.
    dead port 2/5 on $pmux $procmux$5077.
    dead port 3/5 on $pmux $procmux$5077.
    dead port 1/5 on $pmux $procmux$5141.
    dead port 2/5 on $pmux $procmux$5141.
    dead port 4/5 on $pmux $procmux$5141.
    dead port 1/5 on $pmux $procmux$11142.
    dead port 2/5 on $pmux $procmux$11142.
    dead port 4/5 on $pmux $procmux$11142.
    dead port 1/4 on $pmux $procmux$6468.
    dead port 2/4 on $pmux $procmux$6468.
    dead port 1/5 on $pmux $procmux$5205.
    dead port 2/5 on $pmux $procmux$5205.
    dead port 4/5 on $pmux $procmux$5205.
    dead port 1/5 on $pmux $procmux$5270.
    dead port 3/5 on $pmux $procmux$5270.
    dead port 4/5 on $pmux $procmux$5270.
    dead port 1/5 on $pmux $procmux$5335.
    dead port 3/5 on $pmux $procmux$5335.
    dead port 4/5 on $pmux $procmux$5335.
    dead port 1/5 on $pmux $procmux$11211.
    dead port 3/5 on $pmux $procmux$11211.
    dead port 4/5 on $pmux $procmux$11211.
    dead port 1/5 on $pmux $procmux$2270.
    dead port 2/5 on $pmux $procmux$2270.
    dead port 3/5 on $pmux $procmux$2270.
    dead port 2/5 on $pmux $procmux$5401.
    dead port 3/5 on $pmux $procmux$5401.
    dead port 4/5 on $pmux $procmux$5401.
    dead port 1/5 on $pmux $procmux$1829.
    dead port 2/5 on $pmux $procmux$1829.
    dead port 4/5 on $pmux $procmux$1829.
    dead port 2/5 on $pmux $procmux$5467.
    dead port 3/5 on $pmux $procmux$5467.
    dead port 4/5 on $pmux $procmux$5467.
    dead port 1/2 on $mux $techmap\it_but_1.$procmux$12158.
    dead port 1/2 on $mux $techmap\it_but_2.$procmux$12158.
    dead port 1/2 on $mux $techmap\it_but_3.$procmux$12158.
    dead port 1/2 on $mux $techmap\it_but_4.$procmux$12158.
Removed 724 multiplexer ports.
<suppressed ~154 debug messages>

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_top.
Performed a total of 0 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..
Removed 0 unused cells and 1431 unused wires.
<suppressed ~1 debug messages>

4.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.10.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~154 debug messages>

4.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_top.
Performed a total of 0 changes.

4.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.10.16. Finished OPT passes. (There is nothing left to do.)

4.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell test_top.$add$pulses.v:110$20 ($add).
Removed top 25 bits (of 32) from port B of cell test_top.$shiftx$pulses.v:141$50 ($shiftx).
Removed top 25 bits (of 32) from port B of cell test_top.$shiftx$pulses.v:141$53 ($shiftx).
Removed top 31 bits (of 32) from port B of cell test_top.$add$pulses.v:157$57 ($add).
Removed top 28 bits (of 32) from port Y of cell test_top.$add$pulses.v:157$57 ($add).
Removed top 31 bits (of 32) from port B of cell test_top.$add$pulses.v:161$58 ($add).
Removed top 28 bits (of 32) from port Y of cell test_top.$add$pulses.v:161$58 ($add).
Removed top 31 bits (of 32) from port B of cell test_top.$add$pulses.v:167$100 ($add).
Removed top 28 bits (of 32) from port Y of cell test_top.$add$pulses.v:167$100 ($add).
Removed top 25 bits (of 32) from port B of cell test_top.$shiftx$pulses.v:167$103 ($shiftx).
Removed top 25 bits (of 32) from port B of cell test_top.$shiftx$pulses.v:171$309 ($shiftx).
Removed top 31 bits (of 32) from port B of cell test_top.$add$pulses.v:171$386 ($add).
Removed top 28 bits (of 32) from port Y of cell test_top.$add$pulses.v:171$386 ($add).
Removed top 31 bits (of 32) from port B of cell test_top.$sub$pulses.v:179$552 ($sub).
Removed top 28 bits (of 32) from port Y of cell test_top.$sub$pulses.v:179$552 ($sub).
Removed top 31 bits (of 32) from port B of cell test_top.$sub$pulses.v:183$553 ($sub).
Removed top 28 bits (of 32) from port Y of cell test_top.$sub$pulses.v:183$553 ($sub).
Removed top 31 bits (of 32) from port B of cell test_top.$sub$pulses.v:189$559 ($sub).
Removed top 28 bits (of 32) from port Y of cell test_top.$sub$pulses.v:189$559 ($sub).
Removed top 31 bits (of 32) from port B of cell test_top.$sub$pulses.v:193$1001 ($sub).
Removed top 28 bits (of 32) from port Y of cell test_top.$sub$pulses.v:193$1001 ($sub).
Removed top 1 bits (of 4) from port B of cell test_top.$procmux$2898_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$procmux$3258_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$procmux$3650_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$procmux$4074_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell test_top.$procmux$4530_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell test_top.$procmux$5018_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell test_top.$procmux$5538_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$procmux$8303_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$procmux$8663_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$procmux$9055_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$procmux$9479_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell test_top.$procmux$10053_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell test_top.$procmux$10423_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell test_top.$procmux$10943_CMP0 ($eq).
Removed top 1 bits (of 19) from port B of cell test_top.$techmap\it_but_1.$eq$debouncer.v:37$1214 ($eq).
Removed top 31 bits (of 32) from port B of cell test_top.$techmap\it_but_1.$add$debouncer.v:34$1213 ($add).
Removed top 13 bits (of 32) from port Y of cell test_top.$techmap\it_but_1.$add$debouncer.v:34$1213 ($add).
Removed top 14 bits (of 32) from port B of cell test_top.$techmap\it_but_1.$lt$debouncer.v:33$1211 ($lt).
Removed top 1 bits (of 19) from port B of cell test_top.$techmap\it_but_2.$eq$debouncer.v:37$1214 ($eq).
Removed top 31 bits (of 32) from port B of cell test_top.$techmap\it_but_2.$add$debouncer.v:34$1213 ($add).
Removed top 13 bits (of 32) from port Y of cell test_top.$techmap\it_but_2.$add$debouncer.v:34$1213 ($add).
Removed top 14 bits (of 32) from port B of cell test_top.$techmap\it_but_2.$lt$debouncer.v:33$1211 ($lt).
Removed top 1 bits (of 19) from port B of cell test_top.$techmap\it_but_3.$eq$debouncer.v:37$1214 ($eq).
Removed top 31 bits (of 32) from port B of cell test_top.$techmap\it_but_3.$add$debouncer.v:34$1213 ($add).
Removed top 13 bits (of 32) from port Y of cell test_top.$techmap\it_but_3.$add$debouncer.v:34$1213 ($add).
Removed top 14 bits (of 32) from port B of cell test_top.$techmap\it_but_3.$lt$debouncer.v:33$1211 ($lt).
Removed top 1 bits (of 19) from port B of cell test_top.$techmap\it_but_4.$eq$debouncer.v:37$1214 ($eq).
Removed top 31 bits (of 32) from port B of cell test_top.$techmap\it_but_4.$add$debouncer.v:34$1213 ($add).
Removed top 13 bits (of 32) from port Y of cell test_top.$techmap\it_but_4.$add$debouncer.v:34$1213 ($add).
Removed top 14 bits (of 32) from port B of cell test_top.$techmap\it_but_4.$lt$debouncer.v:33$1211 ($lt).
Removed top 3 bits (of 4) from port B of cell test_top.$techmap\disp_0.$procmux$12186_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell test_top.$techmap\disp_0.$procmux$12185_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell test_top.$techmap\disp_0.$procmux$12184_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$techmap\disp_0.$procmux$12183_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$techmap\disp_0.$procmux$12182_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$techmap\disp_0.$procmux$12181_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$techmap\disp_0.$procmux$12180_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell test_top.$techmap\disp1.$procmux$12186_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell test_top.$techmap\disp1.$procmux$12185_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell test_top.$techmap\disp1.$procmux$12184_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$techmap\disp1.$procmux$12183_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$techmap\disp1.$procmux$12182_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$techmap\disp1.$procmux$12181_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell test_top.$techmap\disp1.$procmux$12180_CMP0 ($eq).
Removed top 28 bits (of 32) from wire test_top.$add$pulses.v:157$57_Y.
Removed top 28 bits (of 32) from wire test_top.$add$pulses.v:167$100_Y.
Removed top 28 bits (of 32) from wire test_top.$add$pulses.v:171$310_Y.
Removed top 28 bits (of 32) from wire test_top.$sub$pulses.v:179$552_Y.
Removed top 28 bits (of 32) from wire test_top.$sub$pulses.v:183$553_Y.
Removed top 28 bits (of 32) from wire test_top.$sub$pulses.v:189$559_Y.
Removed top 28 bits (of 32) from wire test_top.$sub$pulses.v:193$1001_Y.
Removed top 13 bits (of 32) from wire test_top.$techmap\it_but_1.$add$debouncer.v:34$1213_Y.
Removed top 13 bits (of 32) from wire test_top.$techmap\it_but_2.$add$debouncer.v:34$1213_Y.
Removed top 13 bits (of 32) from wire test_top.$techmap\it_but_3.$add$debouncer.v:34$1213_Y.
Removed top 12 bits (of 19) from wire test_top.$techmap\it_but_3.$procmux$12163_Y.
Removed top 13 bits (of 32) from wire test_top.$techmap\it_but_4.$add$debouncer.v:34$1213_Y.

4.12. Executing PEEPOPT pass (run peephole optimizers).

4.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

4.14. Executing SHARE pass (SAT-based resource sharing).

4.15. Executing TECHMAP pass (map to technology primitives).

4.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

4.15.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~30 debug messages>

4.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module test_top:
  creating $macc model for $add$pulses.v:110$20 ($add).
  creating $macc model for $add$pulses.v:157$57 ($add).
  creating $macc model for $add$pulses.v:161$58 ($add).
  creating $macc model for $add$pulses.v:167$100 ($add).
  creating $macc model for $add$pulses.v:171$386 ($add).
  creating $macc model for $sub$pulses.v:179$552 ($sub).
  creating $macc model for $sub$pulses.v:183$553 ($sub).
  creating $macc model for $sub$pulses.v:189$559 ($sub).
  creating $macc model for $sub$pulses.v:193$1001 ($sub).
  creating $macc model for $techmap\it_but_1.$add$debouncer.v:34$1213 ($add).
  creating $macc model for $techmap\it_but_2.$add$debouncer.v:34$1213 ($add).
  creating $macc model for $techmap\it_but_3.$add$debouncer.v:34$1213 ($add).
  creating $macc model for $techmap\it_but_4.$add$debouncer.v:34$1213 ($add).
  creating $alu model for $macc $techmap\it_but_4.$add$debouncer.v:34$1213.
  creating $alu model for $macc $techmap\it_but_3.$add$debouncer.v:34$1213.
  creating $alu model for $macc $techmap\it_but_2.$add$debouncer.v:34$1213.
  creating $alu model for $macc $techmap\it_but_1.$add$debouncer.v:34$1213.
  creating $alu model for $macc $sub$pulses.v:193$1001.
  creating $alu model for $macc $sub$pulses.v:189$559.
  creating $alu model for $macc $sub$pulses.v:183$553.
  creating $alu model for $macc $sub$pulses.v:179$552.
  creating $alu model for $macc $add$pulses.v:171$386.
  creating $alu model for $macc $add$pulses.v:167$100.
  creating $alu model for $macc $add$pulses.v:161$58.
  creating $alu model for $macc $add$pulses.v:157$57.
  creating $alu model for $macc $add$pulses.v:110$20.
  creating $alu model for $techmap\it_but_1.$lt$debouncer.v:33$1211 ($lt): new $alu
  creating $alu model for $techmap\it_but_2.$lt$debouncer.v:33$1211 ($lt): new $alu
  creating $alu model for $techmap\it_but_3.$lt$debouncer.v:33$1211 ($lt): new $alu
  creating $alu model for $techmap\it_but_4.$lt$debouncer.v:33$1211 ($lt): new $alu
  creating $alu model for $techmap\it_but_1.$eq$debouncer.v:37$1214 ($eq): merged with $techmap\it_but_1.$lt$debouncer.v:33$1211.
  creating $alu model for $techmap\it_but_2.$eq$debouncer.v:37$1214 ($eq): merged with $techmap\it_but_2.$lt$debouncer.v:33$1211.
  creating $alu model for $techmap\it_but_3.$eq$debouncer.v:37$1214 ($eq): merged with $techmap\it_but_3.$lt$debouncer.v:33$1211.
  creating $alu model for $techmap\it_but_4.$eq$debouncer.v:37$1214 ($eq): merged with $techmap\it_but_4.$lt$debouncer.v:33$1211.
  creating $alu cell for $techmap\it_but_4.$lt$debouncer.v:33$1211, $techmap\it_but_4.$eq$debouncer.v:37$1214: $auto$alumacc.cc:485:replace_alu$12220
  creating $alu cell for $techmap\it_but_3.$lt$debouncer.v:33$1211, $techmap\it_but_3.$eq$debouncer.v:37$1214: $auto$alumacc.cc:485:replace_alu$12231
  creating $alu cell for $techmap\it_but_2.$lt$debouncer.v:33$1211, $techmap\it_but_2.$eq$debouncer.v:37$1214: $auto$alumacc.cc:485:replace_alu$12242
  creating $alu cell for $techmap\it_but_1.$lt$debouncer.v:33$1211, $techmap\it_but_1.$eq$debouncer.v:37$1214: $auto$alumacc.cc:485:replace_alu$12253
  creating $alu cell for $add$pulses.v:110$20: $auto$alumacc.cc:485:replace_alu$12264
  creating $alu cell for $add$pulses.v:157$57: $auto$alumacc.cc:485:replace_alu$12267
  creating $alu cell for $add$pulses.v:161$58: $auto$alumacc.cc:485:replace_alu$12270
  creating $alu cell for $add$pulses.v:167$100: $auto$alumacc.cc:485:replace_alu$12273
  creating $alu cell for $add$pulses.v:171$386: $auto$alumacc.cc:485:replace_alu$12276
  creating $alu cell for $sub$pulses.v:179$552: $auto$alumacc.cc:485:replace_alu$12279
  creating $alu cell for $sub$pulses.v:183$553: $auto$alumacc.cc:485:replace_alu$12282
  creating $alu cell for $sub$pulses.v:189$559: $auto$alumacc.cc:485:replace_alu$12285
  creating $alu cell for $sub$pulses.v:193$1001: $auto$alumacc.cc:485:replace_alu$12288
  creating $alu cell for $techmap\it_but_1.$add$debouncer.v:34$1213: $auto$alumacc.cc:485:replace_alu$12291
  creating $alu cell for $techmap\it_but_2.$add$debouncer.v:34$1213: $auto$alumacc.cc:485:replace_alu$12294
  creating $alu cell for $techmap\it_but_3.$add$debouncer.v:34$1213: $auto$alumacc.cc:485:replace_alu$12297
  creating $alu cell for $techmap\it_but_4.$add$debouncer.v:34$1213: $auto$alumacc.cc:485:replace_alu$12300
  created 17 $alu and 0 $macc cells.

4.19. Executing OPT pass (performing simple optimizations).

4.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~154 debug messages>

4.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_top.
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$12225: { $auto$alumacc.cc:501:replace_alu$12221 [0] $auto$alumacc.cc:501:replace_alu$12221 [1] $auto$alumacc.cc:501:replace_alu$12221 [2] $auto$alumacc.cc:501:replace_alu$12221 [3] $auto$alumacc.cc:501:replace_alu$12221 [4] $auto$alumacc.cc:501:replace_alu$12221 [5] $auto$alumacc.cc:501:replace_alu$12221 [6] $auto$alumacc.cc:501:replace_alu$12221 [7] $auto$alumacc.cc:501:replace_alu$12221 [8] $auto$alumacc.cc:501:replace_alu$12221 [9] $auto$alumacc.cc:501:replace_alu$12221 [10] $auto$alumacc.cc:501:replace_alu$12221 [11] $auto$alumacc.cc:501:replace_alu$12221 [12] $auto$alumacc.cc:501:replace_alu$12221 [13] $auto$alumacc.cc:501:replace_alu$12221 [14] $auto$alumacc.cc:501:replace_alu$12221 [15] $auto$alumacc.cc:501:replace_alu$12221 [16] $auto$alumacc.cc:501:replace_alu$12221 [17] $auto$alumacc.cc:501:replace_alu$12221 [18] }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$12236: { $auto$alumacc.cc:501:replace_alu$12232 [0] $auto$alumacc.cc:501:replace_alu$12232 [1] $auto$alumacc.cc:501:replace_alu$12232 [2] $auto$alumacc.cc:501:replace_alu$12232 [3] $auto$alumacc.cc:501:replace_alu$12232 [4] $auto$alumacc.cc:501:replace_alu$12232 [5] $auto$alumacc.cc:501:replace_alu$12232 [6] $auto$alumacc.cc:501:replace_alu$12232 [7] $auto$alumacc.cc:501:replace_alu$12232 [8] $auto$alumacc.cc:501:replace_alu$12232 [9] $auto$alumacc.cc:501:replace_alu$12232 [10] $auto$alumacc.cc:501:replace_alu$12232 [11] $auto$alumacc.cc:501:replace_alu$12232 [12] $auto$alumacc.cc:501:replace_alu$12232 [13] $auto$alumacc.cc:501:replace_alu$12232 [14] $auto$alumacc.cc:501:replace_alu$12232 [15] $auto$alumacc.cc:501:replace_alu$12232 [16] $auto$alumacc.cc:501:replace_alu$12232 [17] $auto$alumacc.cc:501:replace_alu$12232 [18] }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$12247: { $auto$alumacc.cc:501:replace_alu$12243 [0] $auto$alumacc.cc:501:replace_alu$12243 [1] $auto$alumacc.cc:501:replace_alu$12243 [2] $auto$alumacc.cc:501:replace_alu$12243 [3] $auto$alumacc.cc:501:replace_alu$12243 [4] $auto$alumacc.cc:501:replace_alu$12243 [5] $auto$alumacc.cc:501:replace_alu$12243 [6] $auto$alumacc.cc:501:replace_alu$12243 [7] $auto$alumacc.cc:501:replace_alu$12243 [8] $auto$alumacc.cc:501:replace_alu$12243 [9] $auto$alumacc.cc:501:replace_alu$12243 [10] $auto$alumacc.cc:501:replace_alu$12243 [11] $auto$alumacc.cc:501:replace_alu$12243 [12] $auto$alumacc.cc:501:replace_alu$12243 [13] $auto$alumacc.cc:501:replace_alu$12243 [14] $auto$alumacc.cc:501:replace_alu$12243 [15] $auto$alumacc.cc:501:replace_alu$12243 [16] $auto$alumacc.cc:501:replace_alu$12243 [17] $auto$alumacc.cc:501:replace_alu$12243 [18] }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$12258: { $auto$alumacc.cc:501:replace_alu$12254 [0] $auto$alumacc.cc:501:replace_alu$12254 [1] $auto$alumacc.cc:501:replace_alu$12254 [2] $auto$alumacc.cc:501:replace_alu$12254 [3] $auto$alumacc.cc:501:replace_alu$12254 [4] $auto$alumacc.cc:501:replace_alu$12254 [5] $auto$alumacc.cc:501:replace_alu$12254 [6] $auto$alumacc.cc:501:replace_alu$12254 [7] $auto$alumacc.cc:501:replace_alu$12254 [8] $auto$alumacc.cc:501:replace_alu$12254 [9] $auto$alumacc.cc:501:replace_alu$12254 [10] $auto$alumacc.cc:501:replace_alu$12254 [11] $auto$alumacc.cc:501:replace_alu$12254 [12] $auto$alumacc.cc:501:replace_alu$12254 [13] $auto$alumacc.cc:501:replace_alu$12254 [14] $auto$alumacc.cc:501:replace_alu$12254 [15] $auto$alumacc.cc:501:replace_alu$12254 [16] $auto$alumacc.cc:501:replace_alu$12254 [17] $auto$alumacc.cc:501:replace_alu$12254 [18] }
  Optimizing cells in module \test_top.
Performed a total of 4 changes.

4.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

4.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.19.9. Rerunning OPT passes. (Maybe there is more to do..)

4.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~154 debug messages>

4.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_top.
Performed a total of 0 changes.

4.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.19.16. Finished OPT passes. (There is nothing left to do.)

4.20. Executing FSM pass (extract and optimize FSM).

4.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking test_top.disp1.r_Hex_Encoding as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking test_top.disp_0.r_Hex_Encoding as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

4.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.21. Executing OPT pass (performing simple optimizations).

4.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.21.5. Finished fast OPT passes.

4.22. Executing MEMORY pass.

4.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

4.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).

4.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

4.25.2. Continuing TECHMAP pass.
No more expansions possible.

4.26. Executing ICE40_BRAMINIT pass.

4.27. Executing OPT pass (performing simple optimizations).

4.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.
<suppressed ~5 debug messages>

4.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

4.27.5. Finished fast OPT passes.

4.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

4.29. Executing OPT pass (performing simple optimizations).

4.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~154 debug messages>

4.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_top.
Performed a total of 0 changes.

4.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.29.9. Finished OPT passes. (There is nothing left to do.)

4.30. Executing ICE40_WRAPCARRY pass (wrap carries).

4.31. Executing TECHMAP pass (map to technology primitives).

4.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

4.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$constmap:4fbf4b6b0b840c3482b1a8490b9d16fc620a593f$paramod$f2be2dbc923e39304f7af391f6e23721d5db181b\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using extmapper simplemap for cells of type $nex.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=15 for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~1649 debug messages>

4.32. Executing ICE40_OPT pass (performing simple optimizations).

4.32.1. Running ICE40 specific optimizations.

4.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.
<suppressed ~2501 debug messages>

4.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
<suppressed ~1068 debug messages>
Removed a total of 356 cells.

4.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..
Removed 670 unused cells and 578 unused wires.
<suppressed ~671 debug messages>

4.32.6. Rerunning OPT passes. (Removed registers in this run.)

4.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12220.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$12220.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12231.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$12231.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12242.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$12242.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12253.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$12253.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12264.slice[0].carry: CO=\tik_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12267.slice[0].carry: CO=\up_byte_to_disp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12270.slice[0].carry: CO=\down_byte_to_disp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12273.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$12273.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12276.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$12276.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12279.slice[0].carry: CO=\up_byte_to_disp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12282.slice[0].carry: CO=\down_byte_to_disp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12285.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$12273.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12288.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$12276.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12291.slice[0].carry: CO=\it_but_1.cnt_cks [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12294.slice[0].carry: CO=\it_but_2.cnt_cks [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12297.slice[0].carry: CO=\it_but_3.cnt_cks [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) test_top.$auto$alumacc.cc:485:replace_alu$12300.slice[0].carry: CO=\it_but_4.cnt_cks [0]

4.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..
Removed 4 unused cells and 0 unused wires.
<suppressed ~4 debug messages>

4.32.12. Rerunning OPT passes. (Removed registers in this run.)

4.32.13. Running ICE40 specific optimizations.

4.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.32.18. Finished OPT passes. (There is nothing left to do.)

4.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

4.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module test_top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14588 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [0] -> \lim_tiks_up [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14589 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [1] -> \lim_tiks_up [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14590 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [2] -> \lim_tiks_up [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14591 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [3] -> \lim_tiks_up [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14592 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [4] -> \lim_tiks_up [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14593 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [5] -> \lim_tiks_up [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14594 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [6] -> \lim_tiks_up [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14595 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [7] -> \lim_tiks_up [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14596 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [8] -> \lim_tiks_up [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14597 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [9] -> \lim_tiks_up [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14598 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [10] -> \lim_tiks_up [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14599 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [11] -> \lim_tiks_up [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14600 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [12] -> \lim_tiks_up [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14601 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [13] -> \lim_tiks_up [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14602 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [14] -> \lim_tiks_up [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14603 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [15] -> \lim_tiks_up [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14604 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [16] -> \lim_tiks_up [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14605 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [17] -> \lim_tiks_up [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14606 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [18] -> \lim_tiks_up [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14607 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [19] -> \lim_tiks_up [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14608 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [20] -> \lim_tiks_up [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14609 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [21] -> \lim_tiks_up [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14610 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [22] -> \lim_tiks_up [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14611 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [23] -> \lim_tiks_up [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14612 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [24] -> \lim_tiks_up [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14613 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [25] -> \lim_tiks_up [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14614 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [26] -> \lim_tiks_up [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14615 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [27] -> \lim_tiks_up [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14616 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [28] -> \lim_tiks_up [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14617 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [29] -> \lim_tiks_up [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14618 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [30] -> \lim_tiks_up [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14619 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [31] -> \lim_tiks_up [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14620 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [32] -> \lim_tiks_up [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14621 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [33] -> \lim_tiks_up [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14622 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [34] -> \lim_tiks_up [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14623 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [35] -> \lim_tiks_up [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14624 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [36] -> \lim_tiks_up [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14625 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [37] -> \lim_tiks_up [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14626 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [38] -> \lim_tiks_up [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14627 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [39] -> \lim_tiks_up [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14628 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [40] -> \lim_tiks_up [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14629 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [41] -> \lim_tiks_up [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14630 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [42] -> \lim_tiks_up [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14631 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [43] -> \lim_tiks_up [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14632 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [44] -> \lim_tiks_up [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14633 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [45] -> \lim_tiks_up [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14634 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [46] -> \lim_tiks_up [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14635 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [47] -> \lim_tiks_up [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14636 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [48] -> \lim_tiks_up [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14637 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [49] -> \lim_tiks_up [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14638 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [50] -> \lim_tiks_up [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14639 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [51] -> \lim_tiks_up [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14640 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [52] -> \lim_tiks_up [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14641 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [53] -> \lim_tiks_up [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14642 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [54] -> \lim_tiks_up [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14643 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [55] -> \lim_tiks_up [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14644 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [56] -> \lim_tiks_up [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14645 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [57] -> \lim_tiks_up [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14646 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [58] -> \lim_tiks_up [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14647 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [59] -> \lim_tiks_up [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14648 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [60] -> \lim_tiks_up [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14649 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [61] -> \lim_tiks_up [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14650 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [62] -> \lim_tiks_up [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14651 to $_DFFE_PP_ for $0\lim_tiks_up[63:0] [63] -> \lim_tiks_up [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14652 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [0] -> \lim_tiks_down [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14653 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [1] -> \lim_tiks_down [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14654 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [2] -> \lim_tiks_down [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14655 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [3] -> \lim_tiks_down [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14656 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [4] -> \lim_tiks_down [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14657 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [5] -> \lim_tiks_down [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14658 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [6] -> \lim_tiks_down [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14659 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [7] -> \lim_tiks_down [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14660 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [8] -> \lim_tiks_down [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14661 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [9] -> \lim_tiks_down [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14662 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [10] -> \lim_tiks_down [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14663 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [11] -> \lim_tiks_down [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14664 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [12] -> \lim_tiks_down [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14665 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [13] -> \lim_tiks_down [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14666 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [14] -> \lim_tiks_down [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14667 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [15] -> \lim_tiks_down [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14668 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [16] -> \lim_tiks_down [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14669 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [17] -> \lim_tiks_down [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14670 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [18] -> \lim_tiks_down [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14671 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [19] -> \lim_tiks_down [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14672 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [20] -> \lim_tiks_down [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14673 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [21] -> \lim_tiks_down [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14674 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [22] -> \lim_tiks_down [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14675 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [23] -> \lim_tiks_down [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14676 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [24] -> \lim_tiks_down [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14677 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [25] -> \lim_tiks_down [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14678 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [26] -> \lim_tiks_down [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14679 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [27] -> \lim_tiks_down [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14680 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [28] -> \lim_tiks_down [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14681 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [29] -> \lim_tiks_down [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14682 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [30] -> \lim_tiks_down [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14683 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [31] -> \lim_tiks_down [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14684 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [32] -> \lim_tiks_down [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14685 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [33] -> \lim_tiks_down [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14686 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [34] -> \lim_tiks_down [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14687 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [35] -> \lim_tiks_down [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14688 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [36] -> \lim_tiks_down [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14689 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [37] -> \lim_tiks_down [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14690 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [38] -> \lim_tiks_down [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14691 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [39] -> \lim_tiks_down [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14692 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [40] -> \lim_tiks_down [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14693 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [41] -> \lim_tiks_down [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14694 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [42] -> \lim_tiks_down [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14695 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [43] -> \lim_tiks_down [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14696 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [44] -> \lim_tiks_down [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14697 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [45] -> \lim_tiks_down [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14698 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [46] -> \lim_tiks_down [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14699 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [47] -> \lim_tiks_down [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14700 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [48] -> \lim_tiks_down [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14701 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [49] -> \lim_tiks_down [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14702 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [50] -> \lim_tiks_down [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14703 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [51] -> \lim_tiks_down [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14704 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [52] -> \lim_tiks_down [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14705 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [53] -> \lim_tiks_down [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14706 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [54] -> \lim_tiks_down [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14707 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [55] -> \lim_tiks_down [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14708 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [56] -> \lim_tiks_down [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14709 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [57] -> \lim_tiks_down [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14710 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [58] -> \lim_tiks_down [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14711 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [59] -> \lim_tiks_down [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14712 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [60] -> \lim_tiks_down [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14713 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [61] -> \lim_tiks_down [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14714 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [62] -> \lim_tiks_down [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14715 to $_DFFE_PP_ for $0\lim_tiks_down[63:0] [63] -> \lim_tiks_down [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14716 to $_DFFE_PP_ for $0\changing[0:0] -> \changing.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14717 to $_DFFE_PP_ for $0\cicles_up[0:0] -> \cicles_up.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14718 to $_DFFE_PP_ for $0\up_byte_to_disp[3:0] [0] -> \up_byte_to_disp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14719 to $_DFFE_PP_ for $0\up_byte_to_disp[3:0] [1] -> \up_byte_to_disp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14720 to $_DFFE_PP_ for $0\up_byte_to_disp[3:0] [2] -> \up_byte_to_disp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14721 to $_DFFE_PP_ for $0\up_byte_to_disp[3:0] [3] -> \up_byte_to_disp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14722 to $_DFFE_PP_ for $0\down_byte_to_disp[3:0] [0] -> \down_byte_to_disp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14723 to $_DFFE_PP_ for $0\down_byte_to_disp[3:0] [1] -> \down_byte_to_disp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14724 to $_DFFE_PP_ for $0\down_byte_to_disp[3:0] [2] -> \down_byte_to_disp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14725 to $_DFFE_PP_ for $0\down_byte_to_disp[3:0] [3] -> \down_byte_to_disp [3].

4.35. Executing TECHMAP pass (map to technology primitives).

4.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

4.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~305 debug messages>

4.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.
<suppressed ~2162 debug messages>

4.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12264.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12267.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12270.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12273.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12276.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12279.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12282.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12285.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12288.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12291.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12294.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12297.slice[0].carry ($lut).
Mapping test_top.$auto$alumacc.cc:485:replace_alu$12300.slice[0].carry ($lut).

4.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in test_top.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15330 (SB_DFF): \disp1.r_Hex_Encoding [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14791 (SB_DFF): \it_but_1.rg_stdy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14864 (SB_DFF): \it_but_2.rg_stdy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14934 (SB_DFF): \it_but_3.rg_stdy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15004 (SB_DFF): \it_but_4.rg_stdy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14587 (SB_DFF): \r_Switch_4 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14710 (SB_DFFE): \lim_tiks_down [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14711 (SB_DFFE): \lim_tiks_down [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14712 (SB_DFFE): \lim_tiks_down [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14713 (SB_DFFE): \lim_tiks_down [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14714 (SB_DFFE): \lim_tiks_down [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14715 (SB_DFFE): \lim_tiks_down [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14719 (SB_DFFE): \up_byte_to_disp [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14720 (SB_DFFE): \up_byte_to_disp [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14721 (SB_DFFE): \up_byte_to_disp [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14723 (SB_DFFE): \down_byte_to_disp [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14724 (SB_DFFE): \down_byte_to_disp [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14725 (SB_DFFE): \down_byte_to_disp [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14728 (SB_DFF): \tik_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14729 (SB_DFF): \tik_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14730 (SB_DFF): \tik_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14731 (SB_DFF): \tik_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14732 (SB_DFF): \tik_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14733 (SB_DFF): \tik_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14734 (SB_DFF): \tik_count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14735 (SB_DFF): \tik_count [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14736 (SB_DFF): \tik_count [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14737 (SB_DFF): \tik_count [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14738 (SB_DFF): \tik_count [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14739 (SB_DFF): \tik_count [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14740 (SB_DFF): \tik_count [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14741 (SB_DFF): \tik_count [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14742 (SB_DFF): \tik_count [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14743 (SB_DFF): \tik_count [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14744 (SB_DFF): \tik_count [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14745 (SB_DFF): \tik_count [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14746 (SB_DFF): \tik_count [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14747 (SB_DFF): \tik_count [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14748 (SB_DFF): \tik_count [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14749 (SB_DFF): \tik_count [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14750 (SB_DFF): \tik_count [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14751 (SB_DFF): \tik_count [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14752 (SB_DFF): \tik_count [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14753 (SB_DFF): \tik_count [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14754 (SB_DFF): \tik_count [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14755 (SB_DFF): \tik_count [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14756 (SB_DFF): \tik_count [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14757 (SB_DFF): \tik_count [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14758 (SB_DFF): \tik_count [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14759 (SB_DFF): \tik_count [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14760 (SB_DFF): \tik_count [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14761 (SB_DFF): \tik_count [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14762 (SB_DFF): \tik_count [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14763 (SB_DFF): \tik_count [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14764 (SB_DFF): \tik_count [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14765 (SB_DFF): \tik_count [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14766 (SB_DFF): \tik_count [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14767 (SB_DFF): \tik_count [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14768 (SB_DFF): \tik_count [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14769 (SB_DFF): \tik_count [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14770 (SB_DFF): \tik_count [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14771 (SB_DFF): \tik_count [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14772 (SB_DFF): \tik_count [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14773 (SB_DFF): \tik_count [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14775 (SB_DFF): \tik_count [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14776 (SB_DFF): \tik_count [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14777 (SB_DFF): \tik_count [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14778 (SB_DFF): \tik_count [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14779 (SB_DFF): \tik_count [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14588 (SB_DFFE): \lim_tiks_up [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14780 (SB_DFF): \tik_count [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14781 (SB_DFF): \tik_count [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14782 (SB_DFF): \tik_count [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14783 (SB_DFF): \tik_count [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14784 (SB_DFF): \tik_count [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14785 (SB_DFF): \tik_count [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14786 (SB_DFF): \tik_count [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14787 (SB_DFF): \tik_count [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14788 (SB_DFF): \tik_count [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14789 (SB_DFF): \tik_count [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14790 (SB_DFF): \tik_count [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14793 (SB_DFF): \it_but_1.cnt_cks [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14794 (SB_DFF): \it_but_1.cnt_cks [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14795 (SB_DFF): \it_but_1.cnt_cks [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14796 (SB_DFF): \it_but_1.cnt_cks [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14797 (SB_DFF): \it_but_1.cnt_cks [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14798 (SB_DFF): \it_but_1.cnt_cks [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14799 (SB_DFF): \it_but_1.cnt_cks [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14800 (SB_DFF): \it_but_1.cnt_cks [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14801 (SB_DFF): \it_but_1.cnt_cks [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14802 (SB_DFF): \it_but_1.cnt_cks [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14803 (SB_DFF): \it_but_1.cnt_cks [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14804 (SB_DFF): \it_but_1.cnt_cks [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14805 (SB_DFF): \it_but_1.cnt_cks [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14806 (SB_DFF): \it_but_1.cnt_cks [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14807 (SB_DFF): \it_but_1.cnt_cks [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14808 (SB_DFF): \it_but_1.cnt_cks [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14809 (SB_DFF): \it_but_1.cnt_cks [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14810 (SB_DFF): \it_but_1.cnt_cks [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14683 (SB_DFFE): \lim_tiks_down [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14684 (SB_DFFE): \lim_tiks_down [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14685 (SB_DFFE): \lim_tiks_down [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14686 (SB_DFFE): \lim_tiks_down [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14687 (SB_DFFE): \lim_tiks_down [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14688 (SB_DFFE): \lim_tiks_down [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14689 (SB_DFFE): \lim_tiks_down [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14690 (SB_DFFE): \lim_tiks_down [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14691 (SB_DFFE): \lim_tiks_down [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14692 (SB_DFFE): \lim_tiks_down [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14693 (SB_DFFE): \lim_tiks_down [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14694 (SB_DFFE): \lim_tiks_down [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14695 (SB_DFFE): \lim_tiks_down [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14696 (SB_DFFE): \lim_tiks_down [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14697 (SB_DFFE): \lim_tiks_down [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14698 (SB_DFFE): \lim_tiks_down [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14699 (SB_DFFE): \lim_tiks_down [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14700 (SB_DFFE): \lim_tiks_down [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14701 (SB_DFFE): \lim_tiks_down [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14702 (SB_DFFE): \lim_tiks_down [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14703 (SB_DFFE): \lim_tiks_down [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14704 (SB_DFFE): \lim_tiks_down [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14705 (SB_DFFE): \lim_tiks_down [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14706 (SB_DFFE): \lim_tiks_down [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14707 (SB_DFFE): \lim_tiks_down [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14873 (SB_DFF): \it_but_2.cnt_cks [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14709 (SB_DFFE): \lim_tiks_down [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14589 (SB_DFFE): \lim_tiks_up [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14590 (SB_DFFE): \lim_tiks_up [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14591 (SB_DFFE): \lim_tiks_up [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14592 (SB_DFFE): \lim_tiks_up [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14593 (SB_DFFE): \lim_tiks_up [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14594 (SB_DFFE): \lim_tiks_up [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14595 (SB_DFFE): \lim_tiks_up [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14652 (SB_DFFE): \lim_tiks_down [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14716 (SB_DFFE): \changing = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14717 (SB_DFFE): \cicles_up = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14596 (SB_DFFE): \lim_tiks_up [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14597 (SB_DFFE): \lim_tiks_up [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14598 (SB_DFFE): \lim_tiks_up [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14718 (SB_DFFE): \up_byte_to_disp [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14599 (SB_DFFE): \lim_tiks_up [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14600 (SB_DFFE): \lim_tiks_up [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14601 (SB_DFFE): \lim_tiks_up [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14722 (SB_DFFE): \down_byte_to_disp [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14726 (SB_DFF): \mul_clock = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14602 (SB_DFFE): \lim_tiks_up [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14603 (SB_DFFE): \lim_tiks_up [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14604 (SB_DFFE): \lim_tiks_up [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14605 (SB_DFFE): \lim_tiks_up [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14606 (SB_DFFE): \lim_tiks_up [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14607 (SB_DFFE): \lim_tiks_up [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14608 (SB_DFFE): \lim_tiks_up [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14609 (SB_DFFE): \lim_tiks_up [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14610 (SB_DFFE): \lim_tiks_up [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14611 (SB_DFFE): \lim_tiks_up [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14612 (SB_DFFE): \lim_tiks_up [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14613 (SB_DFFE): \lim_tiks_up [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14614 (SB_DFFE): \lim_tiks_up [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14615 (SB_DFFE): \lim_tiks_up [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14616 (SB_DFFE): \lim_tiks_up [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14617 (SB_DFFE): \lim_tiks_up [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14618 (SB_DFFE): \lim_tiks_up [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14619 (SB_DFFE): \lim_tiks_up [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14620 (SB_DFFE): \lim_tiks_up [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14621 (SB_DFFE): \lim_tiks_up [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14622 (SB_DFFE): \lim_tiks_up [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14623 (SB_DFFE): \lim_tiks_up [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14624 (SB_DFFE): \lim_tiks_up [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14625 (SB_DFFE): \lim_tiks_up [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14626 (SB_DFFE): \lim_tiks_up [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14627 (SB_DFFE): \lim_tiks_up [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14628 (SB_DFFE): \lim_tiks_up [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14629 (SB_DFFE): \lim_tiks_up [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14630 (SB_DFFE): \lim_tiks_up [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14631 (SB_DFFE): \lim_tiks_up [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14632 (SB_DFFE): \lim_tiks_up [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14633 (SB_DFFE): \lim_tiks_up [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14634 (SB_DFFE): \lim_tiks_up [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14635 (SB_DFFE): \lim_tiks_up [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14647 (SB_DFFE): \lim_tiks_up [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14637 (SB_DFFE): \lim_tiks_up [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14638 (SB_DFFE): \lim_tiks_up [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14639 (SB_DFFE): \lim_tiks_up [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14640 (SB_DFFE): \lim_tiks_up [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14641 (SB_DFFE): \lim_tiks_up [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14642 (SB_DFFE): \lim_tiks_up [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14643 (SB_DFFE): \lim_tiks_up [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14644 (SB_DFFE): \lim_tiks_up [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14645 (SB_DFFE): \lim_tiks_up [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14646 (SB_DFFE): \lim_tiks_up [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14774 (SB_DFF): \tik_count [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14708 (SB_DFFE): \lim_tiks_down [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14648 (SB_DFFE): \lim_tiks_up [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14649 (SB_DFFE): \lim_tiks_up [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14650 (SB_DFFE): \lim_tiks_up [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14651 (SB_DFFE): \lim_tiks_up [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14653 (SB_DFFE): \lim_tiks_down [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14654 (SB_DFFE): \lim_tiks_down [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14655 (SB_DFFE): \lim_tiks_down [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14656 (SB_DFFE): \lim_tiks_down [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14657 (SB_DFFE): \lim_tiks_down [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14658 (SB_DFFE): \lim_tiks_down [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14659 (SB_DFFE): \lim_tiks_down [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14660 (SB_DFFE): \lim_tiks_down [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14661 (SB_DFFE): \lim_tiks_down [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14662 (SB_DFFE): \lim_tiks_down [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14663 (SB_DFFE): \lim_tiks_down [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14664 (SB_DFFE): \lim_tiks_down [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14881 (SB_DFF): \it_but_2.cnt_cks [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14727 (SB_DFF): \tik_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14665 (SB_DFFE): \lim_tiks_down [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14666 (SB_DFFE): \lim_tiks_down [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14667 (SB_DFFE): \lim_tiks_down [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14668 (SB_DFFE): \lim_tiks_down [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14669 (SB_DFFE): \lim_tiks_down [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14670 (SB_DFFE): \lim_tiks_down [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14671 (SB_DFFE): \lim_tiks_down [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14672 (SB_DFFE): \lim_tiks_down [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14673 (SB_DFFE): \lim_tiks_down [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14674 (SB_DFFE): \lim_tiks_down [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14675 (SB_DFFE): \lim_tiks_down [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14676 (SB_DFFE): \lim_tiks_down [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14677 (SB_DFFE): \lim_tiks_down [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14678 (SB_DFFE): \lim_tiks_down [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14679 (SB_DFFE): \lim_tiks_down [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14680 (SB_DFFE): \lim_tiks_down [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14681 (SB_DFFE): \lim_tiks_down [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14682 (SB_DFFE): \lim_tiks_down [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14792 (SB_DFF): \it_but_1.cnt_cks [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14584 (SB_DFF): \r_Switch_1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14871 (SB_DFF): \it_but_2.cnt_cks [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14636 (SB_DFFE): \lim_tiks_up [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14874 (SB_DFF): \it_but_2.cnt_cks [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15075 (SB_DFF): \disp_0.r_Hex_Encoding [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15077 (SB_DFF): \disp_0.r_Hex_Encoding [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15079 (SB_DFF): \disp_0.r_Hex_Encoding [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14811 (SB_DFF): \it_but_1.rg_dbn_rdy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14872 (SB_DFF): \it_but_2.cnt_cks [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14875 (SB_DFF): \it_but_2.cnt_cks [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14876 (SB_DFF): \it_but_2.cnt_cks [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14877 (SB_DFF): \it_but_2.cnt_cks [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14878 (SB_DFF): \it_but_2.cnt_cks [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14879 (SB_DFF): \it_but_2.cnt_cks [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14880 (SB_DFF): \it_but_2.cnt_cks [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14883 (SB_DFF): \it_but_2.cnt_cks [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14882 (SB_DFF): \it_but_2.cnt_cks [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14940 (SB_DFF): \it_but_3.cnt_cks [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14937 (SB_DFF): \it_but_3.cnt_cks [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14865 (SB_DFF): \it_but_2.cnt_cks [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14585 (SB_DFF): \r_Switch_2 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14941 (SB_DFF): \it_but_3.cnt_cks [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15332 (SB_DFF): \disp1.r_Hex_Encoding [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15331 (SB_DFF): \disp1.r_Hex_Encoding [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15010 (SB_DFF): \it_but_4.cnt_cks [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14938 (SB_DFF): \it_but_3.cnt_cks [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14939 (SB_DFF): \it_but_3.cnt_cks [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14884 (SB_DFF): \it_but_2.rg_dbn_rdy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14943 (SB_DFF): \it_but_3.cnt_cks [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14944 (SB_DFF): \it_but_3.cnt_cks [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14945 (SB_DFF): \it_but_3.cnt_cks [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14946 (SB_DFF): \it_but_3.cnt_cks [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14947 (SB_DFF): \it_but_3.cnt_cks [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14948 (SB_DFF): \it_but_3.cnt_cks [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14949 (SB_DFF): \it_but_3.cnt_cks [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14950 (SB_DFF): \it_but_3.cnt_cks [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14951 (SB_DFF): \it_but_3.cnt_cks [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14952 (SB_DFF): \it_but_3.cnt_cks [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14953 (SB_DFF): \it_but_3.cnt_cks [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14866 (SB_DFF): \it_but_2.cnt_cks [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14935 (SB_DFF): \it_but_3.cnt_cks [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14586 (SB_DFF): \r_Switch_3 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15011 (SB_DFF): \it_but_4.cnt_cks [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15012 (SB_DFF): \it_but_4.cnt_cks [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15006 (SB_DFF): \it_but_4.cnt_cks [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15007 (SB_DFF): \it_but_4.cnt_cks [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15008 (SB_DFF): \it_but_4.cnt_cks [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15009 (SB_DFF): \it_but_4.cnt_cks [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14954 (SB_DFF): \it_but_3.rg_dbn_rdy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15013 (SB_DFF): \it_but_4.cnt_cks [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15014 (SB_DFF): \it_but_4.cnt_cks [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15015 (SB_DFF): \it_but_4.cnt_cks [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15016 (SB_DFF): \it_but_4.cnt_cks [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15017 (SB_DFF): \it_but_4.cnt_cks [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15018 (SB_DFF): \it_but_4.cnt_cks [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15019 (SB_DFF): \it_but_4.cnt_cks [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15020 (SB_DFF): \it_but_4.cnt_cks [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15021 (SB_DFF): \it_but_4.cnt_cks [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15022 (SB_DFF): \it_but_4.cnt_cks [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15023 (SB_DFF): \it_but_4.cnt_cks [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14870 (SB_DFF): \it_but_2.cnt_cks [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15005 (SB_DFF): \it_but_4.cnt_cks [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15080 (SB_DFF): \disp_0.r_Hex_Encoding [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14867 (SB_DFF): \it_but_2.cnt_cks [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14868 (SB_DFF): \it_but_2.cnt_cks [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15076 (SB_DFF): \disp_0.r_Hex_Encoding [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14869 (SB_DFF): \it_but_2.cnt_cks [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15078 (SB_DFF): \disp_0.r_Hex_Encoding [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15024 (SB_DFF): \it_but_4.rg_dbn_rdy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15074 (SB_DFF): \disp_0.r_Hex_Encoding [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14936 (SB_DFF): \it_but_3.cnt_cks [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15333 (SB_DFF): \disp1.r_Hex_Encoding [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15334 (SB_DFF): \disp1.r_Hex_Encoding [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15335 (SB_DFF): \disp1.r_Hex_Encoding [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15336 (SB_DFF): \disp1.r_Hex_Encoding [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14942 (SB_DFF): \it_but_3.cnt_cks [7] = 0

4.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in test_top.
  Merging $auto$simplemap.cc:277:simplemap_mux$15599 (A=1'0, B=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15308_Y, S=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15330 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14814 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [1], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14793 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14815 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [2], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14794 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14816 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [3], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14795 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14817 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [4], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14796 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14818 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [5], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14797 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14819 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [6], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14798 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14820 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [7], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14799 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14821 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [8], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14800 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14822 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [9], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14801 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14823 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [10], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14802 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14824 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [11], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14803 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14825 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [12], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14804 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14826 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [13], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14805 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14827 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [14], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14806 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14828 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [15], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14807 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14829 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [16], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14808 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14830 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [17], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14809 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14831 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [18], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14810 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14894 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [8], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14873 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14902 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [16], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14881 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14813 (A=1'0, B=$techmap\it_but_1.$procmux$12163_Y [0], S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14792 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14892 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [6], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14871 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14895 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [9], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14874 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16354 (A=1'1, B=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15309_Y, S=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15075 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16356 (A=1'1, B=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15311_Y, S=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15077 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16358 (A=1'1, B=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15313_Y, S=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15079 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14812 (A=$techmap\it_but_1.$logic_not$debouncer.v:25$1207_Y, B=1'1, S=\it_but_1.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14811 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14893 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [7], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14872 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14896 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [10], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14875 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14897 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [11], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14876 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14898 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [12], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14877 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14899 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [13], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14878 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14900 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [14], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14879 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14901 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [15], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14880 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14904 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [18], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14883 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14903 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [17], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14882 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14961 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [5], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14940 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14958 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [2], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14937 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14886 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [0], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14865 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14962 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [6], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14941 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15601 (A=1'1, B=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15310_Y, S=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15332 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15600 (A=1'1, B=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15309_Y, S=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15331 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15031 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [5], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15010 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14959 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [3], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14938 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14960 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [4], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14939 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14885 (A=$techmap\it_but_2.$logic_not$debouncer.v:25$1207_Y, B=1'1, S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14884 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14964 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [8], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14943 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14965 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [9], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14944 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14966 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [10], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14945 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14967 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [11], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14946 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14968 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [12], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14947 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14969 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [13], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14948 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14970 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [14], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14949 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14971 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [15], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14950 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14972 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [16], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14951 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14973 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [17], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14952 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14974 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [18], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14953 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14887 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [1], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14866 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14956 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [0], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14935 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15032 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [6], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15011 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15033 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [7], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15012 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15027 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [1], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15006 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15028 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [2], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15007 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15029 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [3], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15008 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15030 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [4], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15009 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14955 (A=$techmap\it_but_3.$logic_not$debouncer.v:25$1207_Y, B=1'1, S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14954 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15034 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [8], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15013 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15035 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [9], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15014 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15036 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [10], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15015 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15037 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [11], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15016 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15038 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [12], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15017 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15039 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [13], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15018 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15040 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [14], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15019 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15041 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [15], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15020 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15042 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [16], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15021 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15043 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [17], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15022 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15044 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [18], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15023 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14891 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [5], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14870 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15026 (A=1'0, B=$techmap\it_but_4.$procmux$12163_Y [0], S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15005 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16359 (A=1'1, B=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15314_Y, S=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15080 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14888 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [2], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14867 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14889 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [3], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14868 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16355 (A=1'1, B=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15310_Y, S=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15076 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14890 (A=1'0, B=$techmap\it_but_2.$procmux$12163_Y [4], S=\it_but_2.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14869 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16357 (A=1'1, B=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15312_Y, S=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15078 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15025 (A=$techmap\it_but_4.$logic_not$debouncer.v:25$1207_Y, B=1'1, S=\it_but_4.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$15024 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16353 (A=1'0, B=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15308_Y, S=$techmap$techmap\disp_0.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15074 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14957 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [1], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14936 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15602 (A=1'1, B=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15311_Y, S=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15333 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15603 (A=1'1, B=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15312_Y, S=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15334 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15604 (A=1'1, B=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15313_Y, S=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15335 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15605 (A=1'1, B=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$15314_Y, S=$techmap$techmap\disp1.$procmux$12171.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$15291_Y) into $auto$simplemap.cc:420:simplemap_dff$15336 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14963 (A=1'0, B=$auto$wreduce.cc:460:run$12214 [7], S=\it_but_3.rg_dbn_rdy) into $auto$simplemap.cc:420:simplemap_dff$14942 (SB_DFF).

4.40. Executing ICE40_OPT pass (performing simple optimizations).

4.40.1. Running ICE40 specific optimizations.

4.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.
<suppressed ~467 debug messages>

4.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
<suppressed ~14127 debug messages>
Removed a total of 4709 cells.

4.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..
Removed 90 unused cells and 6039 unused wires.
<suppressed ~91 debug messages>

4.40.6. Rerunning OPT passes. (Removed registers in this run.)

4.40.7. Running ICE40 specific optimizations.

4.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.
<suppressed ~6 debug messages>

4.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.40.12. Rerunning OPT passes. (Removed registers in this run.)

4.40.13. Running ICE40 specific optimizations.

4.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_top.

4.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_top'.
Removed a total of 0 cells.

4.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_top..

4.40.18. Finished OPT passes. (There is nothing left to do.)

4.41. Executing TECHMAP pass (map to technology primitives).

4.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

4.41.2. Continuing TECHMAP pass.
No more expansions possible.

4.42. Executing ABC pass (technology mapping using ABC).

4.42.1. Extracting gate netlist of module `\test_top' to `<abc-temp-dir>/input.blif'..
Extracted 1600 gates and 2073 wires to a netlist network with 472 inputs and 323 outputs.

4.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     336.
ABC: Participating nodes from both networks       =     733.
ABC: Participating nodes from the first network   =     343. (  56.79 % of nodes)
ABC: Participating nodes from the second network  =     390. (  64.57 % of nodes)
ABC: Node pairs (any polarity)                    =     343. (  56.79 % of names can be moved)
ABC: Node pairs (same polarity)                   =     330. (  54.64 % of names can be moved)
ABC: Total runtime =     0.10 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

4.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      603
ABC RESULTS:        internal signals:     1278
ABC RESULTS:           input signals:      472
ABC RESULTS:          output signals:      323
Removing temp directory.

4.43. Executing ICE40_WRAPCARRY pass (wrap carries).

4.44. Executing TECHMAP pass (map to technology primitives).

4.44.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

4.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 85 unused cells and 999 unused wires.

4.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      762
  1-LUT              106
  2-LUT               99
  3-LUT              228
  4-LUT              329
  with \SB_CARRY     146

Eliminating LUTs.
Number of LUTs:      762
  1-LUT              106
  2-LUT               99
  3-LUT              228
  4-LUT              329
  with \SB_CARRY     146

Combining LUTs.
Number of LUTs:      690
  1-LUT              106
  2-LUT               23
  3-LUT              164
  4-LUT              397
  with \SB_CARRY     146

Eliminated 0 LUTs.
Combined 72 LUTs.
<suppressed ~5266 debug messages>

4.46. Executing TECHMAP pass (map to technology primitives).

4.46.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000001100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111100100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111011011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110011111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111101001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011100011110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011011111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110101010111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101011110111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111011111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
No more expansions possible.
<suppressed ~1639 debug messages>
Removed 0 unused cells and 1452 unused wires.

4.47. Executing AUTONAME pass.
Renamed 33862 objects in module test_top (66 iterations).
<suppressed ~1854 debug messages>

4.48. Executing HIERARCHY pass (managing design hierarchy).

4.48.1. Analyzing design hierarchy..
Top module:  \test_top

4.48.2. Analyzing design hierarchy..
Top module:  \test_top
Removed 0 unused modules.

4.49. Printing statistics.

=== test_top ===

   Number of wires:                759
   Number of wire bits:           1464
   Number of public wires:         759
   Number of public wire bits:    1464
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1213
     SB_CARRY                      218
     SB_DFF                         73
     SB_DFFE                       138
     SB_DFFSR                       78
     SB_DFFSS                       16
     SB_LUT4                       690

4.50. Executing CHECK pass (checking for obvious problems).
checking module test_top..
found and reported 0 problems.

4.51. Executing JSON backend.

End of script. Logfile hash: dfae83b3fa
CPU: user 12.74s system 0.08s, MEM: 88.44 MB total, 44.54 MB resident
Yosys 0.9+932 (git sha1 613334d9, gcc 7.4.0-1ubuntu1~18.04.1 -fPIC -Os)
Time spent: 33% 20x opt_expr (4 sec), 16% 20x opt_clean (2 sec), ...
